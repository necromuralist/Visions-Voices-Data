<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visions, Voices, Data (Posts about tutorial)</title><link>https://necromuralist.github.io/Visions-Voices-Data/</link><description></description><atom:link href="https://necromuralist.github.io/Visions-Voices-Data/categories/tutorial.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2019 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Mon, 11 Mar 2019 00:36:32 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>HoloViews Tabular Datasets</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#org10604a7"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#orgfbdc19e"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#orgcf2fa7c"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#orgbc47545"&gt;Holoviews Bokeh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#org8d4f80b"&gt;The Embedder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#orgfc27cbc"&gt;Dotenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#org560f8bf"&gt;Tabulate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#org589cad7"&gt;Load the Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#orgaa14009"&gt;Create a Dataset&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#orga2d4768"&gt;Aggregate The Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/#orgd36747c"&gt;Save the HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org10604a7" class="outline-2"&gt;
&lt;h2 id="org10604a7"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org10604a7"&gt;
&lt;p&gt;
This is a walk through the &lt;a href="https://holoviews.org/getting_started/Tabular_Datasets.html"&gt;HoloViews page on Tabular Datasets&lt;/a&gt;. The data-set was created by the Wall Street Journal using Project Tycho, but I'm getting it from the &lt;a href="https://github.com/pyviz/holoviews"&gt;HoloViews github repository&lt;/a&gt;. The Wall Street Journal page is &lt;a href="https://graphics.wsj.com/infectious-diseases-and-vaccines/#b02g20t20w15"&gt;here&lt;/a&gt;. Unfortunately it has mixed content types (https and http) as well as some other problems which prevent Firefox and Chrome-based browsers from rendering it the visualization so I don't know what it actually looks like. Given that it's a commercial site I'm assuming it's an old page that they don't care about anymore.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Warning:&lt;/b&gt;&lt;/b&gt; I originally did this with &lt;code&gt;modin&lt;/code&gt; and it wouldn't plot correctly. Save it for pre-processing and just use the real &lt;code&gt;pandas&lt;/code&gt; when plotting.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfbdc19e" class="outline-2"&gt;
&lt;h2 id="orgfbdc19e"&gt;Set Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfbdc19e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgcf2fa7c" class="outline-3"&gt;
&lt;h3 id="orgcf2fa7c"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgcf2fa7c"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org75a96ac" class="outline-4"&gt;
&lt;h4 id="org75a96ac"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org75a96ac"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1de0db4" class="outline-4"&gt;
&lt;h4 id="org1de0db4"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1de0db4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;output_notebook&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;holoviews&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tabulate&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tabulate&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;holoviews&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9bda96f" class="outline-4"&gt;
&lt;h4 id="org9bda96f"&gt;My Projects&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9bda96f"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bartleby_the_penguin.tangles.embed_bokeh&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgbc47545" class="outline-3"&gt;
&lt;h3 id="orgbc47545"&gt;Holoviews Bokeh&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbc47545"&gt;
&lt;p&gt;
I don't know why but you have to specify that you're using &lt;code&gt;bokeh&lt;/code&gt;, even though it looks like it's working when you don't.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bokeh"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output_notebook&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8d4f80b" class="outline-3"&gt;
&lt;h3 id="org8d4f80b"&gt;The Embedder&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org8d4f80b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;files_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"../../files/posts/libraries/holoviews-tabular-datasets/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Embed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;folder_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;files_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfc27cbc" class="outline-3"&gt;
&lt;h3 id="orgfc27cbc"&gt;Dotenv&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfc27cbc"&gt;
&lt;p&gt;
I have the path to the data-set in a &lt;code&gt;.env&lt;/code&gt; file so I'll load it into the environment dictionary.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;".env"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org560f8bf" class="outline-3"&gt;
&lt;h3 id="org560f8bf"&gt;Tabulate&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org560f8bf"&gt;
&lt;p&gt;
This will print a table that org knows how to render.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;orgtable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tabulate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tablefmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"orgtbl"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
		   &lt;span class="n"&gt;showindex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org589cad7" class="outline-2"&gt;
&lt;h2 id="org589cad7"&gt;Load the Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org589cad7"&gt;
&lt;p&gt;
The data comes from &lt;a href="https://www.tycho.pitt.edu/"&gt;Project Tycho&lt;/a&gt;, which provides health-related data sets for research. The &lt;code&gt;.env&lt;/code&gt; file assumes that I cloned the &lt;code&gt;HoloViews&lt;/code&gt; repository so that I can load the data from it.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"DISEASES"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_file&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;diseases&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;orgtable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diseases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-right"&gt;Year&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Week&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;State&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;measles&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;pertussis&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-right"&gt;1928&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;Alabama&lt;/td&gt;
&lt;td class="org-right"&gt;3.67&lt;/td&gt;
&lt;td class="org-right"&gt;nan&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;1928&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-left"&gt;Alabama&lt;/td&gt;
&lt;td class="org-right"&gt;6.25&lt;/td&gt;
&lt;td class="org-right"&gt;nan&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;1928&lt;/td&gt;
&lt;td class="org-right"&gt;3&lt;/td&gt;
&lt;td class="org-left"&gt;Alabama&lt;/td&gt;
&lt;td class="org-right"&gt;7.95&lt;/td&gt;
&lt;td class="org-right"&gt;nan&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;1928&lt;/td&gt;
&lt;td class="org-right"&gt;4&lt;/td&gt;
&lt;td class="org-left"&gt;Alabama&lt;/td&gt;
&lt;td class="org-right"&gt;12.58&lt;/td&gt;
&lt;td class="org-right"&gt;nan&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;1928&lt;/td&gt;
&lt;td class="org-right"&gt;5&lt;/td&gt;
&lt;td class="org-left"&gt;Alabama&lt;/td&gt;
&lt;td class="org-right"&gt;8.03&lt;/td&gt;
&lt;td class="org-right"&gt;nan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diseases&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diseases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diseases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diseases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Year&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diseases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Week&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
222768
51
1928
2011
[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
 49 50 51 52]

&lt;/pre&gt;

&lt;p&gt;
The &lt;code&gt;State&lt;/code&gt; column includes Washington D.C., which is why there are 51 states. It has 52 weeks of data for each year from 1928 through 2011. Since &lt;i&gt;measles&lt;/i&gt; and &lt;i&gt;pertussis&lt;/i&gt; are greater than 1 I assume that this is some kind of rate (like incidence per million), but the page doesn't say and I the article they link to doesn't seem to render in my browser (and I don't have an account to download a dataset).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgaa14009" class="outline-2"&gt;
&lt;h2 id="orgaa14009"&gt;Create a Dataset&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgaa14009"&gt;
&lt;p&gt;
HoloViews has a class called a Dataset that lets you declare the dependent (&lt;i&gt;value dimensions (vdims)&lt;/i&gt;) and independent variables (&lt;i&gt;key dimensions (kdims)&lt;/i&gt;).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;key_dimensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Year State"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;value_dimensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s2"&gt;"measles"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Measles Incidence"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"pertussis"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Pertusis Incidence"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;diseases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key_dimensions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value_dimensions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The &lt;code&gt;value_dimensions&lt;/code&gt; list has tuples - these take the form &lt;code&gt;(&amp;lt;column-name&amp;gt;, &amp;lt;output-name&amp;gt;)&lt;/code&gt; so when you make a plot it will use the &lt;code&gt;&amp;lt;output-name&amp;gt;&lt;/code&gt; for any labels that are created.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga2d4768" class="outline-3"&gt;
&lt;h3 id="orga2d4768"&gt;Aggregate The Data&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga2d4768"&gt;
&lt;p&gt;
The one column that I didn't add is the &lt;code&gt;Week&lt;/code&gt; column. The &lt;code&gt;Dataset&lt;/code&gt; has a rather confusing &lt;code&gt;aggregate&lt;/code&gt; method (confusing because you only pass in the function to aggregate with) that apparently knows how to use the &lt;code&gt;key_dimensions&lt;/code&gt; variables we passed in to figure out what to aggregate.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;aggregate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
:Dataset   [Year,State]   (measles,pertussis)
(4284, 4)

&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Curve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Year"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"measles"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Curve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Year"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"pertussis"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Curve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;framewise&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"hover"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"measles_pertusis"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/measles_pertusis.js" id="e0b8360d-329e-4304-bd8b-0b14a6a80f57"&gt;&lt;/script&gt;

&lt;p&gt;
Two things to note. One is that HoloViews picked up the nicer names without us having to specify them. Another is that only Alabama is displayed. In the demonstration HoloViews created a drop-down menu to select a state but it didn't do it here. Maybe you need to run it in a jupyter notebookâ¦
&lt;/p&gt;

&lt;p&gt;
Actually, I think it might be a conflict with &lt;code&gt;nikola&lt;/code&gt;, this is a page saved from a jupyter notebook without any nikola pre-processing:
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/diseases.html"&gt;diseases.html&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd36747c" class="outline-3"&gt;
&lt;h3 id="orgd36747c"&gt;Save the HTML&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd36747c"&gt;
&lt;p&gt;
I'll see if you can do it directly here without using jupyter.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;save_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"diseases_2.html"&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;files_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"[[file:{}][This is the plot.]]"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save_file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/diseases_2.html"&gt;This is the plot.&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>bokeh</category><category>holoviews</category><category>tutorial</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-tabular-datasets/</guid><pubDate>Fri, 01 Mar 2019 20:54:10 GMT</pubDate></item><item><title>Kaggle On Time-Series Visualization</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orge4579e6"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgbfe5622"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org8c1643f"&gt;Imports&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org7aca411"&gt;From Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgfc754bd"&gt;From PyPi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org36fb142"&gt;My Projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgd9543d2"&gt;Plotting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgecbd1ae"&gt;Holoviews Backend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgdfd7fa4"&gt;Bokeh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org58c7b45"&gt;Setup Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org023eae6"&gt;The Embedder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org40c3cd7"&gt;The Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org018c686"&gt;New York Stock Exchange Prices&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgb738346"&gt;UPS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgf1d8b8e"&gt;Shelter Outcomes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org7ce1a52"&gt;Cryptocurrency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgc3412f7"&gt;Grouping&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org5d6323d"&gt;Birth Dates&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgf961555"&gt;Per Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgffeb924"&gt;By Year&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org765adb5"&gt;Lollipop Plot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org83213e2"&gt;Animal Shelter Outcomes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org82a2bb8"&gt;Trading Volume&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgfb43494"&gt;Lag Plots&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgc55a2d5"&gt;NYSE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org84f361a"&gt;UPS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org3a109a0"&gt;Autcorrelation Plot&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org1681339"&gt;UPS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org593082e"&gt;Cryptocurrency&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#org97895e4"&gt;Lag Plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/#orgb532b8b"&gt;Autocorrelation Plot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge4579e6" class="outline-2"&gt;
&lt;h2 id="orge4579e6"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge4579e6"&gt;
&lt;p&gt;
This is a walk-through of the kaggle notebook on &lt;a href="https://www.kaggle.com/residentmario/time-series-plotting-optional"&gt;Time-Series Plotting&lt;/a&gt; by Aleksey Bilogur.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgbfe5622" class="outline-2"&gt;
&lt;h2 id="orgbfe5622"&gt;Set Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbfe5622"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8c1643f" class="outline-3"&gt;
&lt;h3 id="org8c1643f"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org8c1643f"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7aca411" class="outline-4"&gt;
&lt;h4 id="org7aca411"&gt;From Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7aca411"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from datetime import datetime
from functools import partial
from pathlib import Path
import os
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfc754bd" class="outline-4"&gt;
&lt;h4 id="orgfc754bd"&gt;From PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgfc754bd"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from dotenv import load_dotenv
from bokeh.io.doc import curdoc
from bokeh.models import CrosshairTool, HoverTool
from bokeh.themes import Theme
from bokeh.palettes import Category20
from holoviews import opts
from holoviews.plotting.links import RangeToolLink
from hvplot import hvPlot
from pandas.plotting import autocorrelation_plot, lag_plot
from tabulate import tabulate
import holoviews
import matplotlib
import matplotlib.pyplot as pyplot
import pandas
import seaborn
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org36fb142" class="outline-4"&gt;
&lt;h4 id="org36fb142"&gt;My Projects&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org36fb142"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from bartleby_the_penguin.tangles.embed_bokeh import EmbedBokeh
from graeae.tables import CountPercentage
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd9543d2" class="outline-3"&gt;
&lt;h3 id="orgd9543d2"&gt;Plotting&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd9543d2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;get_ipython().run_line_magic('matplotlib', 'inline')
get_ipython().run_line_magic('config', "InlineBackend.figure_format = 'retina'")
seaborn.set(style="whitegrid",
	    rc={"axes.grid": False,
		"font.family": ["sans-serif"],
		"font.sans-serif": ["Open Sans", "Latin Modern Sans", "Lato"],
		"figure.figsize": (8, 6)},
	    font_scale=1)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgecbd1ae" class="outline-4"&gt;
&lt;h4 id="orgecbd1ae"&gt;Holoviews Backend&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgecbd1ae"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;holoviews.extension("bokeh")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdfd7fa4" class="outline-4"&gt;
&lt;h4 id="orgdfd7fa4"&gt;Bokeh&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgdfd7fa4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Plots:
    width = 1100
    height = 600
    font = "Open Sans"
    font_size = "24pt"
    line_width = 3
    tools =  ["hover"]
    blue = seaborn.color_palette()[0]
    light_blue = Category20[3][1]
    red = seaborn.color_palette()[3]
    yellow = seaborn.color_palette()[1]
    green = seaborn.color_palette()[2]
    gray = seaborn.color_palette()[7]

theme = Theme(json={
    "attrs": {
	"Figure": {
	    "text_font": "Open Sans",
	    "text_font_size": "18pt",
	    "line_color": Category20[3][0],
	    "plot_width": Plots.width,
	    "plot_height": Plots.height,
	    "tools": ["pan", "zoom_in", "hover", "reset"],
	},
	"Title": {
	    "text_font_style": "bold",
	},
    },
})
curdoc().theme = theme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org58c7b45" class="outline-3"&gt;
&lt;h3 id="org58c7b45"&gt;Setup Libraries&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org58c7b45"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;load_dotenv()
table = partial(tabulate, headers="keys", tablefmt="orgtbl")
kaggle_path = Path(os.environ.get("KAGGLE")).expanduser()
assert kaggle_path.is_dir()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org023eae6" class="outline-3"&gt;
&lt;h3 id="org023eae6"&gt;The Embedder&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org023eae6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Embed = partial(
    EmbedBokeh, 
    folder_path="../../files/posts/tutorials/kaggle-on-time-series-visualization/")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org40c3cd7" class="outline-2"&gt;
&lt;h2 id="org40c3cd7"&gt;The Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org40c3cd7"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org018c686" class="outline-3"&gt;
&lt;h3 id="org018c686"&gt;New York Stock Exchange Prices&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org018c686"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nyse_path = kaggle_path.joinpath("nyse/prices.csv")
assert nyse_path.is_file()
nyse = pandas.read_csv(nyse_path, parse_dates=["date"])
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nyse.info()
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
RangeIndex: 851264 entries, 0 to 851263
Data columns (total 7 columns):
date      851264 non-null datetime64[ns]
symbol    851264 non-null object
open      851264 non-null float64
close     851264 non-null float64
low       851264 non-null float64
high      851264 non-null float64
volume    851264 non-null float64
dtypes: datetime64[ns](1), float64(5), object(1)
memory usage: 45.5+ MB
&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nyse = nyse.set_index("date")
print(table(nyse.head()))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;date&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;symbol&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;open&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;close&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;low&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;high&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;volume&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;2016-01-05 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;WLTW&lt;/td&gt;
&lt;td class="org-right"&gt;123.43&lt;/td&gt;
&lt;td class="org-right"&gt;125.84&lt;/td&gt;
&lt;td class="org-right"&gt;122.31&lt;/td&gt;
&lt;td class="org-right"&gt;126.25&lt;/td&gt;
&lt;td class="org-right"&gt;2.1636e+06&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2016-01-06 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;WLTW&lt;/td&gt;
&lt;td class="org-right"&gt;125.24&lt;/td&gt;
&lt;td class="org-right"&gt;119.98&lt;/td&gt;
&lt;td class="org-right"&gt;119.94&lt;/td&gt;
&lt;td class="org-right"&gt;125.54&lt;/td&gt;
&lt;td class="org-right"&gt;2.3864e+06&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2016-01-07 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;WLTW&lt;/td&gt;
&lt;td class="org-right"&gt;116.38&lt;/td&gt;
&lt;td class="org-right"&gt;114.95&lt;/td&gt;
&lt;td class="org-right"&gt;114.93&lt;/td&gt;
&lt;td class="org-right"&gt;119.74&lt;/td&gt;
&lt;td class="org-right"&gt;2.4895e+06&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2016-01-08 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;WLTW&lt;/td&gt;
&lt;td class="org-right"&gt;115.48&lt;/td&gt;
&lt;td class="org-right"&gt;116.62&lt;/td&gt;
&lt;td class="org-right"&gt;113.5&lt;/td&gt;
&lt;td class="org-right"&gt;117.44&lt;/td&gt;
&lt;td class="org-right"&gt;2.0063e+06&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2016-01-11 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;WLTW&lt;/td&gt;
&lt;td class="org-right"&gt;117.01&lt;/td&gt;
&lt;td class="org-right"&gt;114.97&lt;/td&gt;
&lt;td class="org-right"&gt;114.09&lt;/td&gt;
&lt;td class="org-right"&gt;117.33&lt;/td&gt;
&lt;td class="org-right"&gt;1.4086e+06&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
The notebook describes this as an example of a "strong" date case because the dates act as an explicit index for the data and are, in this case, an aggregate for a day of trading.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb738346" class="outline-4"&gt;
&lt;h4 id="orgb738346"&gt;UPS&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgb738346"&gt;
&lt;p&gt;
Some of the correlational plots don't show anything meaningful when you use the market as a whole (I guess because different stocks are moving in different directions) so I'm going to pull out the UPS stock information to use later.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ups = nyse[nyse.symbol=="UPS"]
print(ups.shape)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
(1762, 6)

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf1d8b8e" class="outline-3"&gt;
&lt;h3 id="orgf1d8b8e"&gt;Shelter Outcomes&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf1d8b8e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;shelter_path = kaggle_path.joinpath(
    "austin-animal-center-shelter-outcomes/aac_shelter_outcomes.csv")
assert shelter_path.is_file()
shelter = pandas.read_csv(shelter_path, parse_dates=["datetime", "date_of_birth"])
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;shelter.info()
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
RangeIndex: 78256 entries, 0 to 78255
Data columns (total 12 columns):
age_upon_outcome    78248 non-null object
animal_id           78256 non-null object
animal_type         78256 non-null object
breed               78256 non-null object
color               78256 non-null object
date_of_birth       78256 non-null datetime64[ns]
datetime            78256 non-null datetime64[ns]
monthyear           78256 non-null object
name                54370 non-null object
outcome_subtype     35963 non-null object
outcome_type        78244 non-null object
sex_upon_outcome    78254 non-null object
dtypes: datetime64[ns](2), object(10)
memory usage: 7.2+ MB
&lt;/pre&gt;

&lt;p&gt;
Some of the columns are only identifiers (like a name) so we'll drop them to make it easier to inspect the data (although we aren't really going to do anything with it here anyway).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;shelter = shelter[["outcome_type", "age_upon_outcome", "datetime",
		   "animal_type", "breed", "color", "sex_upon_outcome",
		   "date_of_birth"]]
print(table(shelter.head(), showindex=False))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;outcome_type&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;age_upon_outcome&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;datetime&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;animal_type&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;breed&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;color&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;sex_upon_outcome&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;date_of_birth&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Transfer&lt;/td&gt;
&lt;td class="org-left"&gt;2 weeks&lt;/td&gt;
&lt;td class="org-left"&gt;2014-07-22 16:04:00&lt;/td&gt;
&lt;td class="org-left"&gt;Cat&lt;/td&gt;
&lt;td class="org-left"&gt;Domestic Shorthair Mix&lt;/td&gt;
&lt;td class="org-left"&gt;Orange Tabby&lt;/td&gt;
&lt;td class="org-left"&gt;Intact Male&lt;/td&gt;
&lt;td class="org-left"&gt;2014-07-07 00:00:00&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Transfer&lt;/td&gt;
&lt;td class="org-left"&gt;1 year&lt;/td&gt;
&lt;td class="org-left"&gt;2013-11-07 11:47:00&lt;/td&gt;
&lt;td class="org-left"&gt;Dog&lt;/td&gt;
&lt;td class="org-left"&gt;Beagle Mix&lt;/td&gt;
&lt;td class="org-left"&gt;White/Brown&lt;/td&gt;
&lt;td class="org-left"&gt;Spayed Female&lt;/td&gt;
&lt;td class="org-left"&gt;2012-11-06 00:00:00&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Adoption&lt;/td&gt;
&lt;td class="org-left"&gt;1 year&lt;/td&gt;
&lt;td class="org-left"&gt;2014-06-03 14:20:00&lt;/td&gt;
&lt;td class="org-left"&gt;Dog&lt;/td&gt;
&lt;td class="org-left"&gt;Pit Bull&lt;/td&gt;
&lt;td class="org-left"&gt;Blue/White&lt;/td&gt;
&lt;td class="org-left"&gt;Neutered Male&lt;/td&gt;
&lt;td class="org-left"&gt;2013-03-31 00:00:00&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Transfer&lt;/td&gt;
&lt;td class="org-left"&gt;9 years&lt;/td&gt;
&lt;td class="org-left"&gt;2014-06-15 15:50:00&lt;/td&gt;
&lt;td class="org-left"&gt;Dog&lt;/td&gt;
&lt;td class="org-left"&gt;Miniature Schnauzer Mix&lt;/td&gt;
&lt;td class="org-left"&gt;White&lt;/td&gt;
&lt;td class="org-left"&gt;Neutered Male&lt;/td&gt;
&lt;td class="org-left"&gt;2005-06-02 00:00:00&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Euthanasia&lt;/td&gt;
&lt;td class="org-left"&gt;5 months&lt;/td&gt;
&lt;td class="org-left"&gt;2014-07-07 14:04:00&lt;/td&gt;
&lt;td class="org-left"&gt;Other&lt;/td&gt;
&lt;td class="org-left"&gt;Bat Mix&lt;/td&gt;
&lt;td class="org-left"&gt;Brown&lt;/td&gt;
&lt;td class="org-left"&gt;Unknown&lt;/td&gt;
&lt;td class="org-left"&gt;2014-01-07 00:00:00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
The notebook describes this as an example of a "weak" date case because the dates are only there for record-keeping and, while they might be significant for modeling, aren't acting as an index for the records.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7ce1a52" class="outline-3"&gt;
&lt;h3 id="org7ce1a52"&gt;Cryptocurrency&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7ce1a52"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;currency_path = kaggle_path.joinpath("all-crypto-currencies/crypto-markets.csv")
assert currency_path.is_file()
currency = pandas.read_csv(currency_path, parse_dates=["date"])
currency = currency.set_index("date")
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(table(currency.head(), showindex=True))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;date&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;slug&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;symbol&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;name&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;ranknow&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;open&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;high&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;low&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;close&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;volume&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;market&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;close_ratio&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;spread&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;2013-04-28 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;bitcoin&lt;/td&gt;
&lt;td class="org-left"&gt;BTC&lt;/td&gt;
&lt;td class="org-left"&gt;Bitcoin&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;135.3&lt;/td&gt;
&lt;td class="org-right"&gt;135.98&lt;/td&gt;
&lt;td class="org-right"&gt;132.1&lt;/td&gt;
&lt;td class="org-right"&gt;134.21&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1.48857e+09&lt;/td&gt;
&lt;td class="org-right"&gt;0.5438&lt;/td&gt;
&lt;td class="org-right"&gt;3.88&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2013-04-29 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;bitcoin&lt;/td&gt;
&lt;td class="org-left"&gt;BTC&lt;/td&gt;
&lt;td class="org-left"&gt;Bitcoin&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;134.44&lt;/td&gt;
&lt;td class="org-right"&gt;147.49&lt;/td&gt;
&lt;td class="org-right"&gt;134&lt;/td&gt;
&lt;td class="org-right"&gt;144.54&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1.60377e+09&lt;/td&gt;
&lt;td class="org-right"&gt;0.7813&lt;/td&gt;
&lt;td class="org-right"&gt;13.49&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2013-04-30 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;bitcoin&lt;/td&gt;
&lt;td class="org-left"&gt;BTC&lt;/td&gt;
&lt;td class="org-left"&gt;Bitcoin&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;144&lt;/td&gt;
&lt;td class="org-right"&gt;146.93&lt;/td&gt;
&lt;td class="org-right"&gt;134.05&lt;/td&gt;
&lt;td class="org-right"&gt;139&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1.54281e+09&lt;/td&gt;
&lt;td class="org-right"&gt;0.3843&lt;/td&gt;
&lt;td class="org-right"&gt;12.88&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2013-05-01 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;bitcoin&lt;/td&gt;
&lt;td class="org-left"&gt;BTC&lt;/td&gt;
&lt;td class="org-left"&gt;Bitcoin&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;139&lt;/td&gt;
&lt;td class="org-right"&gt;139.89&lt;/td&gt;
&lt;td class="org-right"&gt;107.72&lt;/td&gt;
&lt;td class="org-right"&gt;116.99&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1.29895e+09&lt;/td&gt;
&lt;td class="org-right"&gt;0.2882&lt;/td&gt;
&lt;td class="org-right"&gt;32.17&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2013-05-02 00:00:00&lt;/td&gt;
&lt;td class="org-left"&gt;bitcoin&lt;/td&gt;
&lt;td class="org-left"&gt;BTC&lt;/td&gt;
&lt;td class="org-left"&gt;Bitcoin&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;116.38&lt;/td&gt;
&lt;td class="org-right"&gt;125.6&lt;/td&gt;
&lt;td class="org-right"&gt;92.28&lt;/td&gt;
&lt;td class="org-right"&gt;105.21&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1.16852e+09&lt;/td&gt;
&lt;td class="org-right"&gt;0.3881&lt;/td&gt;
&lt;td class="org-right"&gt;33.32&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc3412f7" class="outline-2"&gt;
&lt;h2 id="orgc3412f7"&gt;Grouping&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc3412f7"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5d6323d" class="outline-3"&gt;
&lt;h3 id="org5d6323d"&gt;Birth Dates&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5d6323d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf961555" class="outline-4"&gt;
&lt;h4 id="orgf961555"&gt;Per Date&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgf961555"&gt;
&lt;p&gt;
Here's a plot of the birth dates of the animals in the shelter.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;births = shelter.date_of_birth.value_counts()
births_peak = births.idxmax()
births = births.reset_index().sort_values(by="index")
births.columns = ["birth_date", "Births"]
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hover = HoverTool(
tooltips=[
    ("Date", "@birth_date{%Y-%m-%d}"),
    ("Births", "@Births{0,0}"),
],
    formatters= {"birth_date": "datetime", 
		 "Births": "numeral"},
    mode="vline",
)
line = holoviews.VLine(births_peak)
curve = holoviews.Curve(
    births, ("birth_date", "Date of Birth"), "Births",
)

main = curve.relabel("Count of Births By Date").opts(labelled=["y"], 
						     tools=[hover], 
						     height=Plots.height, 
						     ylabel="Births", 
						     xaxis=None)
range_finder = curve.opts(height=100, yaxis=None, default_tools=[], 
			  xlabel="Birth Dates")

link = RangeToolLink(range_finder, main)

combination = (main * line + range_finder * line)

layout = combination.opts(
    opts.Layout(shared_axes=False, merge_tools=False, fontsize=Plots.font_size),
    opts.Curve(width=Plots.width, 
	       color=Category20[3][0], 
	       fontsize=Plots.font_size,
	       line_width=Plots.line_width),
    opts.VLine(color=Plots.red, line_dash="dotted")
).cols(1)
Embed(layout, "shelter_births")()
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/shelter_births.js" id="d1793db5-32ff-47c4-ba11-83d1393fd041"&gt;&lt;/script&gt;

&lt;p&gt;
It lools like there was an upward trend until about 2016 when it started to taper off, but since we're counting by days there's a lot of variance so we're going to group the data using pandas' &lt;a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.resample.html"&gt;resample&lt;/a&gt; method.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt; One interesting problem I found is that unless I zoom in I can't get my mouse to trigger the hover-tool for the day with the greatest value (May 5, 2014).
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
There's a couple of different ways to do the grouping of the days, but the simplest way is to take the count for each date using &lt;a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.value_counts.html"&gt;value_counts&lt;/a&gt;. This will leave us with a &lt;a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.html"&gt;Series&lt;/a&gt; with the dates in the index and the counts as values. Once we have this we can aggregate the dates by year and then count how many births there were per year.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgffeb924" class="outline-4"&gt;
&lt;h4 id="orgffeb924"&gt;By Year&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgffeb924"&gt;
&lt;p&gt;
First I'll get the counts for each day using &lt;code&gt;value_counts&lt;/code&gt; and print off the first values to see what it looks like. Calling &lt;code&gt;reset_index&lt;/code&gt; changes the Series to a DataFrame with the dates as a column.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;counts = shelter.date_of_birth.value_counts()
print(table(counts.head().reset_index(), showindex=False))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;index&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;date_of_birth&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;2014-05-05 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;112&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2015-09-01 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;110&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2014-04-21 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;105&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2015-04-28 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;104&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2016-05-01 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;102&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
Now we can aggregate the birth-counts by year using &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.resample.html"&gt;resample&lt;/a&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;year_counts = counts.resample("Y")
print(year_counts)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
DatetimeIndexResampler [freq=&amp;lt;YearEnd: month=12&amp;gt;, axis=0, closed=right, label=right, convention=start, base=0]

&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;
Note that this is a grouper, we don't get what we want until we call a method (like &lt;code&gt;count&lt;/code&gt;) on it. In this case since we have value counts we want to sum all of the counts for a year (so we need &lt;code&gt;sum&lt;/code&gt;).
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Now I'm going to aggregate the yearly counts using the &lt;code&gt;sum&lt;/code&gt; method.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sums = year_counts.sum()
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Calling &lt;code&gt;sum&lt;/code&gt; gives us a Series with the dates in the index and the sums as the values.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(sums.head())
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
1991-12-31    1
1992-12-31    1
1993-12-31    1
1994-12-31    9
1995-12-31    7
Freq: A-DEC, Name: date_of_birth, dtype: int64

&lt;/pre&gt;

&lt;p&gt;
The &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.idxmax.html"&gt;&lt;code&gt;idxmax&lt;/code&gt;&lt;/a&gt; method gives us the index of the greatest value and since the dates are in the index, using it will give us the date of the year with the most births, which I'll call &lt;code&gt;sum_peak&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sum_peak = sums.idxmax()
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
As you may have noticed, all the dates are set for December 31, but for plotting it's better to have them set to January 1 so I'll set it here and do a some other cleanup.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sums = sums.reset_index()
sums.columns = ["birth_date", "Births"]
sum_peak = datetime(sum_peak.year, 1, 1)
sums["birth_date"] = sums.birth_date.apply(lambda date: datetime(date.year, 1, 1))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And now for the plot.
&lt;/p&gt;
&lt;/div&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org860d458"&gt;&lt;/a&gt;The Tools&lt;br&gt;
&lt;div class="outline-text-5" id="text-org860d458"&gt;
&lt;p&gt;
First set up the tools
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hover = HoverTool(
tooltips=[
    ("Year", "@birth_date{%Y}"),
    ("Births", "@Births{0,0}"),
],
    formatters= {"birth_date": "datetime", 
		 "Births": "numeral"},
    mode="vline",
)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org8563768"&gt;&lt;/a&gt;The Plot Parts&lt;br&gt;
&lt;div class="outline-text-5" id="text-org8563768"&gt;
&lt;p&gt;
Now I'll create our plotting objects.
&lt;/p&gt;

&lt;p&gt;
The vertical line will mark the peak year.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;line = holoviews.VLine(sum_peak, label=sum_peak.strftime("%Y"))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And I'm going to add an annotation to it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;x = datetime(sum_peak.year, 3, 1)
text = holoviews.Text(x, sums.max()[1]/4,
		      "Max Year: {}".format(sum_peak.year), 
		      halign="left")
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now our data-curve.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curve = holoviews.Curve(
    sums, ("birth_date", "Date of Birth"), "Births",
)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Next I'll make two copies of the curve - &lt;code&gt;main&lt;/code&gt; will be the larger curve and &lt;code&gt;range_finder&lt;/code&gt; will 
create a plot below it to let us select a range of dates which get linked using the &lt;code&gt;RangeToolLink&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;main = curve.relabel("Births Per Year (1991- 2017)").opts(
    labelled=["y"], 
    tools=[hover], 
    xaxis=None,
    ylabel="Births",
    height=Plots.height)
range_finder = curve.opts(height=100, yaxis=None, 
			  default_tools=[],
			  xlabel="Year")

link = RangeToolLink(range_finder, main)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now combine the parts to make our visible plot.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;combination = (line * main * text + line * range_finder)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This next bit is to set some styling on the plot.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="orgd542673"&gt;&lt;/a&gt;The Options&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgd542673"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;layout = combination.opts(
    opts.Layout(shared_axes=False, merge_tools=False, fontsize=Plots.font_size),
    opts.Curve(width=Plots.width, 
	       color=Plots.blue,
	       padding=0.01,
	       fontsize=Plots.font_size, 
	       line_width=Plots.line_width),
    opts.VLine(color=Plots.red, line_dash="dotted")
).cols(1)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="orgc605cf1"&gt;&lt;/a&gt;Embed&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgc605cf1"&gt;
&lt;p&gt;
Finally, create the javascript and embed it in this notebook.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Embed(layout, "shelter_births_per_year")()
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/shelter_births_per_year.js" id="108235f3-e4fc-4afa-b724-a53c18323b6f"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id="outline-container-org765adb5" class="outline-4"&gt;
&lt;h4 id="org765adb5"&gt;Lollipop Plot&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org765adb5"&gt;
&lt;p&gt;
An alternative way to look at this would be a lollipop plot.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# The Tools
hover = HoverTool(
tooltips=[
    ("Year", "@birth_date{%Y}"),
    ("Births", "@Births{0,0}"),
],
    formatters= {"birth_date": "datetime", 
		 "Births": "numeral"},
    mode="vline",
)

# The Parts
line = holoviews.VLine(sum_peak, label=peak.strftime("%Y"))
spikes = holoviews.Spikes(sums, ("birth_date", "Date of Birth"), "Births")
circles = holoviews.Scatter(sums, "birth_date", "Births")

# The Range Finder
main = circles.relabel().opts(
    labelled=["y"], 
    tools=[hover], 
    xaxis=None,
    ylabel="Births",
    height=Plots.height,
    size=10,
    padding=(0, (0, 0.1)))
range_finder = circles.opts(height=100, 
			    yaxis=None, 
			    default_tools=[],
			    size=5,
			    fontsize={"ticks": "14pt"},
			    xlabel="Year of Birth")

link = RangeToolLink(range_finder, main)

# The Layout
combination = (spikes * line * main + spikes * line * range_finder)

# The Styling Options
layout = combination.opts(
    opts.Layout(shared_axes=False, 
		merge_tools=False,
		title="Shelter Animal Births Per Year (1991- 2017)",
		show_title=True,
		fontsize=Plots.font_size),
    opts.Spikes(width=Plots.width, 
		color=Plots.red, 
		fontsize=Plots.font_size,
		line_width=Plots.line_width),
    opts.Scatter(color=Plots.blue, fontsize={"ticks": "14pt"}, legend_position="left"),
    opts.VLine(color=Plots.green),
).cols(1)

# The HTML and Javascript
Embed(layout, "births_per_year_spikes")()
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/births_per_year_spikes.js" id="479c8e63-eba4-439f-946b-5a087796c709"&gt;&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;
Note that putting the title in the Layout changes the font. I was trying to set it to Open Sans but HoloViews is horribly documented for most things so I couldn't figure out how to do it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org83213e2" class="outline-3"&gt;
&lt;h3 id="org83213e2"&gt;Animal Shelter Outcomes&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org83213e2"&gt;
&lt;p&gt;
While knowing the birthdates of the animals in the shelter is interesting, what about the dates when their cases were resolved? I originally called this &lt;i&gt;Animal Shelter Adoptions&lt;/i&gt; but "outcome" doesn't always mean "adopted", unfortunately.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CountPercentage(shelter.outcome_type)()
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Value&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Count&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Percentage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Adoption&lt;/td&gt;
&lt;td class="org-right"&gt;33112&lt;/td&gt;
&lt;td class="org-right"&gt;42.32&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Transfer&lt;/td&gt;
&lt;td class="org-right"&gt;23499&lt;/td&gt;
&lt;td class="org-right"&gt;30.03&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Return to Owner&lt;/td&gt;
&lt;td class="org-right"&gt;14354&lt;/td&gt;
&lt;td class="org-right"&gt;18.35&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Euthanasia&lt;/td&gt;
&lt;td class="org-right"&gt;6080&lt;/td&gt;
&lt;td class="org-right"&gt;7.77&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Died&lt;/td&gt;
&lt;td class="org-right"&gt;680&lt;/td&gt;
&lt;td class="org-right"&gt;0.87&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Disposal&lt;/td&gt;
&lt;td class="org-right"&gt;307&lt;/td&gt;
&lt;td class="org-right"&gt;0.39&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Rto-Adopt&lt;/td&gt;
&lt;td class="org-right"&gt;150&lt;/td&gt;
&lt;td class="org-right"&gt;0.19&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Missing&lt;/td&gt;
&lt;td class="org-right"&gt;46&lt;/td&gt;
&lt;td class="org-right"&gt;0.06&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Relocate&lt;/td&gt;
&lt;td class="org-right"&gt;16&lt;/td&gt;
&lt;td class="org-right"&gt;0.02&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
I don't know what &lt;i&gt;Disposal&lt;/i&gt; means, but it doesn't sound good. Neither does &lt;i&gt;Missing&lt;/i&gt;, really, especially if there are any restaurants nearby. Anyway, on to the plotting. I'll aggregate the outcome-counts by year.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;outcome_counts = shelter.datetime.value_counts()
outcomes = outcome_counts.resample("Y").sum()
print(table(outcome_counts.head().reset_index(), showindex=False))
outcomes = outcomes.reset_index()
outcomes.columns = ["date", "count"]
outcomes["date"] = outcomes.date.apply(lambda date: datetime(date.year, 1, 1))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;index&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;datetime&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;2016-04-18 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;39&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2015-08-11 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;25&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2017-10-17 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;25&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2015-11-17 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;22&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;2015-07-02 00:00:00&lt;/td&gt;
&lt;td class="org-right"&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
This next part isn't really necessary but I think keeping the names consistent is helpful, especially since I was struggling so much with HoloViews and didn't need the extra confusion about column-names being wrong.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sums = sums.rename(columns=dict(birth_date="date", Births="count"))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This is going to be like the previous plot but I'm going to add a crosshair tool to make it easier to see how things line up with the axis.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# The Tools
hover = HoverTool(
tooltips=[
    ("Year", "@date{%Y}"),
    ("Count", "@count{0,0}"),
],
    formatters= {"date": "datetime", 
		 "count": "numeral"},
    mode="vline",
)
crosshairs = CrosshairTool(line_color=Plots.light_blue)

# The Parts
births = holoviews.Scatter(sums, "date", "count", label="Births")
outcome_circles = holoviews.Scatter(outcomes, "date", "count", 
				    group="outcome", label="Outcomes")
spikes = holoviews.Spikes(outcomes, ("date", 'Year'), ("count", "Count"), 
			  group="outcome")

# The Layout
combination = spikes * outcome_circles * births

# The Styling
layout = combination.opts(
    opts.Layout(shared_axes=False,
		height=Plots.height,
		merge_tools=False,
		show_title=True,
		fontsize=Plots.font_size),
    opts.Spikes(width=Plots.width, 
		height=Plots.height,
		title="Shelter Animal Births vs Outcomes Per Year",
		show_title=True,
		fontsize=Plots.font_size,
		padding=(0, (0, .1)),
		color=Plots.blue,
		line_width=Plots.line_width),
    opts.Scatter("outcome", color=Plots.blue, size=10, legend_position="top_left"),
    opts.Scatter(fontsize={"ticks": "14pt"}, color=Plots.red, size=10, 
		 tools=[hover, crosshairs]),
)

# The HTML
Embed(layout, "outcome_lollipops")()
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/outcome_lollipops.js" id="6ca452e8-d318-45b0-bd37-b3ed8d32fe8b"&gt;&lt;/script&gt;

&lt;p&gt;
You can see that there are only six years of adoption outcomes although there are sixteen years of birth dates, with a sudden uptick to the peak year of 2014. It's interesting that the births drop off much faster than the outcomes - the animals seemed to be getting older for some reason.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org82a2bb8" class="outline-3"&gt;
&lt;h3 id="org82a2bb8"&gt;Trading Volume&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org82a2bb8"&gt;
&lt;p&gt;
The previous plot was a count-plot. You can also use other summary-statistics like a mean to see how things changed over time. I'll plot the mean volume per year for the New York Stock Exchange.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume = nyse.volume.resample("Y")
means = volume.mean().reset_index()
means["date"] = means.date.apply(lambda date: datetime(date.year, 1, 1))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Along with the standard deviations.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deviations = volume.std().reset_index()
means["two_sigma"] = means.volume + 2 * deviations.volume
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
And now our plot.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# The Tools
hover = HoverTool(
tooltips=[
    ("Year", "@date{%Y}"),
    ("Volume", "@volume{0,0.00}"),
],
    formatters= {"date": "datetime", 
		 "volume": "numeral",
    },
    mode="vline",
)

# The Parts
top_spread = holoviews.ErrorBars((means.date, means.volume, means.two_sigma),
			      group="volume")

volume_curve = holoviews.Curve(means, 
			       ("date", "Year"), 
			       ("volume", "Volume"), 
			       group="volume")

zero_line = holoviews.HLine(0)

# The Layout
layout = volume_curve * top_spread * zero_line

# The Styling
layout = layout.opts(
    opts.Layout(shared_axes=False,
		height=Plots.height,
		merge_tools=False,
		show_title=True,
		fontsize=Plots.font_size),
    opts.Curve(width=Plots.width, 
	       height=Plots.height,
	       title="Mean NYSE Trading Volume Per Year",
	       show_title=True,
	       fontsize=Plots.font_size,
	       padding=(0, (0, .1)),
	       color=Plots.blue,
	       line_width=Plots.line_width,
	       tools=[hover]),
    opts.HLine(line_color=Plots.gray)
)

# The HTML
Embed(layout, "stock_mean_volume")()
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/stock_mean_volume.js" id="7e7ad56b-bc40-47f2-81df-211c792cc2aa"&gt;&lt;/script&gt;

&lt;p&gt;
While the standard deviation is important, in this case it's so large that it smashes the mean down flat (although maybe the fact that it's so large tells us that the mean isn't so accurate).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hover = HoverTool(
tooltips=[
    ("Year", "@date{%Y}"),
    ("Volume", "@volume{0,0.00}"),
],
    formatters= {"date": "datetime", 
		 "volume": "numeral"},
    mode="vline",
)

volume_circles = holoviews.Scatter(means, "date", "volume")
volume_spikes = holoviews.Spikes(means, ("date", "Date"), 
				 ("volume", "Volume"))
combination = volume_spikes * volume_circles
crosshairs = CrosshairTool(line_color=Plots.light_blue, dimensions="height")

layout = combination.opts(
    opts.Layout(shared_axes=False,
		height=Plots.height,
		merge_tools=False,
		show_title=True,
		fontsize=Plots.font_size),
    opts.Spikes(width=Plots.width, 
		height=Plots.height,
		title="NYSE Mean Annual Trading Volume",
		show_title=True,
		fontsize=Plots.font_size,
		padding=(0, (0, .1)),
		color=Plots.blue,
		line_width=Plots.line_width),
    opts.Scatter(color=Plots.blue,
		 size=10, 
		 tools=[hover, crosshairs]),
)
Embed(layout, "stock_lollipops")()
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/stock_lollipops.js" id="188e1b48-71ce-4867-925f-a3c183fbcd8a"&gt;&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;
I took the cross-hairs out of the plot with the standard deviations but it was (a little) more helpful for the lollipop plots because you have to be directly above the points to trigger the hover tool, whereas you can be above any part of a segment in the &lt;code&gt;Curve&lt;/code&gt; plot and it triggers the hover tool.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfb43494" class="outline-2"&gt;
&lt;h2 id="orgfb43494"&gt;Lag Plots&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfb43494"&gt;
&lt;p&gt;
The &lt;a href="https://pandas.pydata.org/pandas-docs/stable/visualization.html#lag-plot"&gt;Lag Plot&lt;/a&gt; helps you check if there is a significance to the ordering of the data. You are plotting the value in the inputs vs the next value (e.g. one day against the following day). If there is no significance to the ordering then the plot will look random.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc55a2d5" class="outline-3"&gt;
&lt;h3 id="orgc55a2d5"&gt;NYSE&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc55a2d5"&gt;
&lt;p&gt;
The &lt;code&gt;lag_plot&lt;/code&gt; function isn't one of the DataFrame methods so I don't think it will work with HoloViews, although I haven't tried yet.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume = nyse.volume.resample("D")
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;figure, axe = pyplot.subplots()
figure.suptitle("NYSE Volume Lag Plot", weight="bold")
subplot = lag_plot(volume.sum().tail(365), ax=axe)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/lag_plot.png" alt="lag_plot.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
So, the center points do seem to show a relationship, as the next-days volume goes up along with the previous day's volume, but I don't know what those bands around 0 are. One thing I noticed is that there are holidays in the data.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(volume.sum().index[-6])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
2016-12-25 00:00:00

&lt;/pre&gt;

&lt;p&gt;
And there are also weekends in there.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(volume.sum().index[-13].strftime("%a"))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Sun

&lt;/pre&gt;

&lt;p&gt;
So it's likely that there are days in there where there was no trading and so they won't correlate with the days that preceded the start of a break or the ones that followed the end of a break. I think. I don't really know if there's trading all year round.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;volume_sums = volume.sum()
for day in volume_sums[volume_sums==0][-9:].index:
    print("{} {}".format(day.strftime("%a"), day))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Sat 2016-12-03 00:00:00
Sun 2016-12-04 00:00:00
Sat 2016-12-10 00:00:00
Sun 2016-12-11 00:00:00
Sat 2016-12-17 00:00:00
Sun 2016-12-18 00:00:00
Sat 2016-12-24 00:00:00
Sun 2016-12-25 00:00:00
Mon 2016-12-26 00:00:00

&lt;/pre&gt;

&lt;p&gt;
So it does look like the zeros are weekends and holidays.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org84f361a" class="outline-3"&gt;
&lt;h3 id="org84f361a"&gt;UPS&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org84f361a"&gt;
&lt;p&gt;
Here's what just the UPS trading volumes look like.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;figure, axe = pyplot.subplots()
figure.suptitle("UPS Trading Volume Lag Plot", weight="bold")
subplot = lag_plot(ups.volume, ax=axe)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/ups_lag_plot.png" alt="ups_lag_plot.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
I don't know why but that makes it look better. I guess the market as a whole doesn't move quite so well together day by day as a single stock does.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3a109a0" class="outline-2"&gt;
&lt;h2 id="org3a109a0"&gt;Autcorrelation Plot&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3a109a0"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1681339" class="outline-3"&gt;
&lt;h3 id="org1681339"&gt;UPS&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1681339"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;figure, axe = pyplot.subplots()
figure.suptitle("UPS Trading Volume Daily Autocorrelation", weight="bold")
subplot = autocorrelation_plot(ups.volume, ax=axe)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/autocorrelation.png" alt="autocorrelation.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
This plot shows the lag in relationship to correlation over different lag intervals. It looks like up to about 500 days of lag the correlation is positive but it starts to become more negative after that.  The horizontal lines are the confidence intervals - the solid grey lines are the 95 % interval and the dashed grey lines are the 99% interval. The points that fall outside of these intervals are statistically significant.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org593082e" class="outline-2"&gt;
&lt;h2 id="org593082e"&gt;Cryptocurrency&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org593082e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org97895e4" class="outline-3"&gt;
&lt;h3 id="org97895e4"&gt;Lag Plot&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org97895e4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;crypto_daily = currency.volume.resample("D")
figure, axe = pyplot.subplots()
figure.suptitle("Cryptocurrency Volume Lag Plot", weight="bold")
subplot = lag_plot(crypto_daily.sum(), ax=axe)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/crypto_lag.png" alt="crypto_lag.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Unlike the stock-exchange, the cryptocurrencies seem to move together and don't take days off.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb532b8b" class="outline-3"&gt;
&lt;h3 id="orgb532b8b"&gt;Autocorrelation Plot&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb532b8b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;figure, axe = pyplot.subplots()
figure.suptitle("Dogecoin Auto Correlation", weight="bold")
dogecoin = currency[currency.name=="Dogecoin"]
subplot = autocorrelation_plot(dogecoin.volume, ax=axe)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/currency_autocorrelation.png" alt="currency_autocorrelation.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
If my understanding of how this plot works is correct, there is some kind of significance to lags of 125 and 250 days. Is this really true? Possibly.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>kaggle</category><category>time-series</category><category>tutorial</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/tutorials/kaggle-on-time-series-visualization/</guid><pubDate>Sun, 20 Jan 2019 21:12:55 GMT</pubDate></item></channel></rss>
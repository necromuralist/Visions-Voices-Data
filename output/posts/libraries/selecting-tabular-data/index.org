#+BEGIN_COMMENT
.. title: Selecting Tabular Data
.. slug: selecting-tabular-data
.. date: 2019-03-02 16:25:15 UTC-08:00
.. tags: holoviews,example
.. category: HoloViews
.. link: 
.. description: Selecting a Dataset subset.
.. type: text

#+END_COMMENT
#+OPTIONS: ^:{}
#+TOC: headlines 2
#+BEGIN_SRC python :session holoviews :results none :exports none
%load_ext autoreload
%autoreload 2
#+END_SRC
* Set Up
** Imports
*** Python
#+begin_src python :session holoviews :results none
from functools import partial
from pathlib import Path
import os
#+end_src
*** PyPi
#+begin_src python :session holoviews :results none
from dotenv import load_dotenv
from holoviews import opts
from tabulate import tabulate
import holoviews
import numpy
import pandas
#+end_src
*** My Projects
#+BEGIN_SRC python :session holoviews :results none
from bartleby_the_penguin.tangles.embed_bokeh import EmbedBokeh
#+END_SRC
** Holoviews Bokeh
   I don't know why but you have to specify that you're using =bokeh=, even though it looks like it's working when you don't.
#+begin_src python :session holoviews :results none
holoviews.extension("bokeh")
#+end_src
** The Embedder
#+BEGIN_SRC python :session holoviews :results none
files_path = Path("../../files/posts/libraries/selecting-tabular-data/")
Embed = partial(
    EmbedBokeh,
    folder_path=files_path)
#+END_SRC
** Dotenv
   I have the path to the data-set in a =.env= file so I'll load it into the environment dictionary.
#+begin_src python :session holoviews :results none
load_dotenv(".env")
#+end_src
* Load the Data
  This is the same measles/pertusis data that I used before.
#+begin_src python :session holoviews :results none
path = Path(os.environ.get("DISEASES")).expanduser()
assert path.is_file()
with path.open() as reader:
    diseases = pandas.read_csv(path)
#+end_src

#+begin_src python :session holoviews :results output raw :exports both
print(orgtable(diseases.head()))
#+end_src

#+RESULTS:
| Year | Week | State   | measles | pertussis |
|------+------+---------+---------+-----------|
| 1928 |    1 | Alabama |    3.67 |       nan |
| 1928 |    2 | Alabama |    6.25 |       nan |
| 1928 |    3 | Alabama |    7.95 |       nan |
| 1928 |    4 | Alabama |   12.58 |       nan |
| 1928 |    5 | Alabama |    8.03 |       nan |

* Convert the DataFrame to a Dataset
#+begin_src python :session holoviews :results none
key_dimensions = "Year State".split()
value_dimensions = [("measles", "Measles Incidence"), ("pertussis", "Pertusis Incidence")]
dataset = holoviews.Dataset(diseases, key_dimensions, value_dimensions)
#+end_src

* Aggregate The Data

#+begin_src python :session holoviews :results none
dataset = dataset.aggregate(function=numpy.mean)
#+end_src

#+begin_src python :session holoviews :results output :exports both
print(dataset)
print(dataset.shape)
#+end_src

#+RESULTS:
: :Dataset   [Year,State]   (measles,pertussis)
: (4284, 4)

* Plot a Subset

#+begin_src python :session holoviews :results none
northwest = ["Oregon", "Washington", "Idaho"]
bars = dataset.select(State=northwest, Year=(1928, 1938)).to(
    holoviews.Bars, ["Year", "State"], "measles").sort()
plot = bars.opts(
    opts.Bars(width=800, height=400, tools=["hover"], xrotation=90, show_legend=False)
)
#+end_src

#+begin_src python :session holoviews :results output raw :exports both
Embed(plot, "northwest_measles")()
#+end_src

#+RESULTS:
#+begin_export html
<script src="northwest_measles.js" id="9711b5b4-83ef-4e9e-b406-5fe3859f6bf3"></script>
#+end_export

As with all things HoloViews, there are many things that are unclear here - but the one that really tripped me up was the selection of years. Although I passed in a tuple it used it as a range (start, stop) so my original plot had a century instead of two years. Oh, well.

Interesting how Oregon spiked up in 1935 and 1936 then dropped down in 1937. According to [[https://www.cdc.gov/measles/about/history.html][the CDC]], the measles vaccine didn't come out until 1963, so I guess those ebb-and-flows are just the normal way diseases cycle through populations. Oregon and Washington probably had more immigrants than Idaho, as well as  higher population densities in their main cities, which might account for their higher rates. Hard to say without corellating data.

* Facets
  The bar-plot is okay for comparing the cities within any given year but they are hard to get trends from. Here's how to use selecting to plot lines for each city.

#+begin_src python :session holoviews :results none
grouped = dataset.select(State=northwest, Year=(1928, 2011)).to(holoviews.Curve, "Year", "measles")
gridspace = grouped.grid("State")
plot = gridspace.opts(
    opts.Curve(width=200, color="crimson", tools=["hover"])
)
#+end_src

#+begin_src python :session holoviews :results output raw :exports both
Embed(plot, "northwest_measles_grid")()
#+end_src

#+RESULTS:
#+begin_export html
<script src="northwest_measles_grid.js" id="e0183ad8-47df-4d67-befe-c2c4ba24e369"></script>
#+end_export

* Overlays
  While the side-by-side plots are clearer than the bar-plots, it's harder to compare the cities year-by-year, so it might be better to plot them over each other.

#+begin_src python :session holoviews :results none
overlay = grouped.overlay("State")
plot = overlay.opts(
    opts.Curve(height=500, width=1000, color=holoviews.Cycle(values=["crimson", "slateblue", "cadetblue"]))
)
#+end_src

#+begin_src python :session holoviews :results output raw :exports both
Embed(plot, "northwest_measles_overlay")()
#+end_src

#+RESULTS:
#+begin_export html
<script src="northwest_measles_overlay.js" id="a78fd3e5-9234-410a-b6f3-267875eab6aa"></script>
#+end_export

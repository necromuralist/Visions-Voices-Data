<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visions, Voices, Data (Posts about exploration)</title><link>https://necromuralist.github.io/Visions-Voices-Data/</link><description></description><atom:link href="https://necromuralist.github.io/Visions-Voices-Data/categories/exploration.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Sat, 08 Feb 2020 23:05:33 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Snorkel Data Labeling</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#org06927e3"&gt;Beginning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#org7f8d1ae"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#orgfad0ccd"&gt;Set Up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#org1bd75e8"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#org45a8226"&gt;Finding Labeling Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#org0eb4199"&gt;Using TextBlob with a Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#orgba3195b"&gt;More Labeling Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/#org4575456"&gt;Adding a Spacy Preprocessor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org06927e3" class="outline-2"&gt;
&lt;h2 id="org06927e3"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org06927e3"&gt;
&lt;p&gt;
This is a walk-through of the Snorkel &lt;a href="https://www.snorkel.org/use-cases/01-spam-tutorial"&gt;Snorkel Data Labeling&lt;/a&gt; tutorial.It uses the &lt;a href="http://www.dt.fee.unicamp.br/~tiago//youtubespamcollection/"&gt;YouTube Spam Collection&lt;/a&gt; data set (downloaded from the &lt;a href="https://archive.ics.uci.edu/ml/datasets/YouTube+Spam+Collection"&gt;UCI Machine Learning Repository&lt;/a&gt;). The data was collected in 2015 and represents comments from five of the ten most popular videos on YouTube. It is a tabular dataset with the columns &lt;code&gt;COMMENT_ID&lt;/code&gt;, &lt;code&gt;AUTHOR&lt;/code&gt;, &lt;code&gt;DATE&lt;/code&gt;, &lt;code&gt;CONTENT&lt;/code&gt;, &lt;code&gt;CLASS&lt;/code&gt;. The tag represents whether it was considered &lt;i&gt;Spam&lt;/i&gt; or not, so we'll pretend it isn't there for most of this walk-through.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7f8d1ae" class="outline-3"&gt;
&lt;h3 id="org7f8d1ae"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7f8d1ae"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9173448" class="outline-4"&gt;
&lt;h4 id="org9173448"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9173448"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from argparse import Namespace
from functools import partial
from pathlib import Path
import re
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7d6ca41" class="outline-4"&gt;
&lt;h4 id="org7d6ca41"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7d6ca41"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from snorkel.analysis import get_label_buckets
from snorkel.labeling import labeling_function, LabelingFunction, LFAnalysis, PandasLFApplier
from snorkel.preprocess import preprocessor
from snorkel.labeling.lf.nlp import nlp_labeling_function
from sklearn.model_selection import train_test_split
from tabulate import tabulate
from textblob import TextBlob

import pandas
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfad0ccd" class="outline-3"&gt;
&lt;h3 id="orgfad0ccd"&gt;Set Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfad0ccd"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4daa77b" class="outline-4"&gt;
&lt;h4 id="org4daa77b"&gt;The Tabulate Table&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org4daa77b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TABLE = partial(tabulate, tablefmt="orgtbl", headers="keys")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1d35b54" class="outline-4"&gt;
&lt;h4 id="org1d35b54"&gt;Some Constants&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1d35b54"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Comment = Namespace(
    is_ambiguous = -1,
    is_ham = 0,
    is_spam = 1
)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Data = Namespace(
    test_artist = "Shakira",
    development_size = 200,
    validation_size = 0.5,
    random_seed = 666,
)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Columns = Namespace(
    comment = "CONTENT",
    classification = "CLASS",
    artist = "artist",
)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1bd75e8" class="outline-2"&gt;
&lt;h2 id="org1bd75e8"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org1bd75e8"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5cff5f4" class="outline-4"&gt;
&lt;h4 id="org5cff5f4"&gt;The Dataset&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org5cff5f4"&gt;
&lt;p&gt;
The data is split up into separate files - one for each artist/video (they are named after the artist and each only appears to have one entry) so I'm going to smash them back together and add a &lt;code&gt;artist&lt;/code&gt; column.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;path = Path("~/data/datasets/texts/you_tube_comments/").expanduser()
sets = []
for name in path.glob("*.csv"):
    artist = name.stem.split()[-1]
    data = pandas.read_csv(name)
    data["artist"] = artist
    sets.append(data)
    print(artist)
data = pandas.concat(sets)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
KatyPerry
LMFAO
Eminem
Shakira
Psy
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd0f4285" class="outline-4"&gt;
&lt;h4 id="orgd0f4285"&gt;Splitting the Set&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgd0f4285"&gt;
&lt;p&gt;
The tutorial takes a slightly different approach from the one I previously took. Here's their four data-set splits:
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;i&gt;train&lt;/i&gt;: Comments from the first four videos&lt;/li&gt;
&lt;li&gt;&lt;i&gt;dev&lt;/i&gt;: 200 comments taken from &lt;i&gt;train&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;valid &amp;amp; test&lt;/i&gt;: A 50-50 split of the last video (actually &lt;i&gt;Shakira&lt;/i&gt;, not &lt;i&gt;Psy&lt;/i&gt; as listed above)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;test = data[data.artist==Data.test_artist]
train = data[data.artist != Data.test_artist]
train, development = train_test_split(train, test_size=Data.development_size)

validation, test = train_test_split(test, test_size=Data.validation_size)
print(f"Training: {train.shape}")
print(f"Development: {development.shape}")
print(f"Validation: {validation.shape}")
print(f"Testing: {test.shape}")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Training: (1386, 6)
Development: (200, 6)
Validation: (185, 6)
Testing: (185, 6)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org45a8226" class="outline-3"&gt;
&lt;h3 id="org45a8226"&gt;Finding Labeling Functions&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org45a8226"&gt;
&lt;p&gt;
The place to start is with the development set - it's labeled (although in this case the training set is as well, but pretend it isn't) and we can inspect it to get ideas.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(development.sample(random_state=Data.random_seed)[[Columns.comment, Columns.classification]])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
                                               CONTENT  CLASS
216  Lol...I dunno how this joke gets a lot of like...      0
&lt;/pre&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;spam = development[development[Columns.classification]==Comment.is_spam]
for count in range(10):
    print(spam.sample(random_state=count).iloc[0][Columns.comment])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
I #votekatyperry for the 2014 MTV #VMA Best Lyric Video! See who's in the  lead and vote:  http://on.mtv.com/Ut15kX﻿
LIKE AND SUBSCRIB IF YOU WATCH IN 2015 ;)﻿
 HI IM 14 YEAR RAPPER SUPPORT ME GUY AND CHECK OUT MY CHANNEL AND CHECK OUT MY SONG YOU MIGHT LIKE IT ALSO FOLLOW ME IN TWITTER @McAshim for follow back.
LIKE AND SUBSCRIB IF YOU WATCH IN 2015 ;)﻿
HAPPY BIRTHDAY KATY :) http://giphy.com/gifs/birthday-flowers-happy-gw3JY2uqiaXKaQXS/fullscreen  (That´s not me)﻿
plz check out fablife / welcome to fablife for diys and challenges so plz  subscribe thx!﻿
CHECK OUT MY CHANNEL BOYS AND GIRLS ;)
HAPPY BIRTHDAY KATY :) http://giphy.com/gifs/birthday-flowers-happy-gw3JY2uqiaXKaQXS/fullscreen  (That´s not me)﻿
*for 90&amp;amp;#39;s rap fans*  check out my Big Pun - &amp;amp;#39;Beware&amp;amp;#39; cover!  Likes n comments very much appreciated!
Who&amp;amp;#39;s watching in 2015 Subscribe for me !﻿
&lt;/pre&gt;

&lt;p&gt;
You can already see that the spam has people asking viewers to check out their sites.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org823bb24" class="outline-4"&gt;
&lt;h4 id="org823bb24"&gt;Check vs Check Out&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org823bb24"&gt;
&lt;p&gt;
Let's see which one of the strings (&lt;i&gt;check&lt;/i&gt; or &lt;i&gt;check out&lt;/i&gt;) does better for us.
&lt;/p&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org648df57"&gt;&lt;/a&gt;The Labeling Functions&lt;br&gt;
&lt;div class="outline-text-5" id="text-org648df57"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@labeling_function()
def check(row: pandas.Series) -&amp;gt; int:
    """sees if the word 'check' is in the comment"""
    return Comment.is_spam if "check" in row.CONTENT.lower() else Comment.is_ambiguous
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@labeling_function()
def check_out(row: pandas.Series) -&amp;gt; int:
    """looks for phrase 'check out'"""
    return Comment.is_spam if "check out" in row.CONTENT.lower() else Comment.is_ambiguous
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="orgcf84922"&gt;&lt;/a&gt;Applying the Functions&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgcf84922"&gt;
&lt;p&gt;
The next step is to create some Labeling Matrices using our labeling functions by applying them to our training and development sets. Since our data is stored using pandas, we'll use the &lt;code&gt;PandasLFApplier&lt;/code&gt;, but there are &lt;a href="https://snorkel.readthedocs.io/en/master/packages/labeling.html"&gt;other types available&lt;/a&gt; as well.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;labeling_functions = [check, check_out]

applier = PandasLFApplier(lfs=labeling_functions)
train_labeling_matrix = applier.apply(df=train, progress_bar=False)
development_labeling_matrix = applier.apply(df=development, progress_bar=False)
print(f"Training Labeling Matrix: {train_labeling_matrix.shape}")
print(f"Development Labeling Matrix: {development_labeling_matrix.shape}")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Training Labeling Matrix: (1386, 2)
Development Labeling Matrix: (200, 2)
&lt;/pre&gt;


&lt;p&gt;
Each matrix has one column for each of our labeling functions (so two in this case) and one row for each of the rows in the set that the functions were applied to.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org6359522"&gt;&lt;/a&gt;Evaluating the Labeling Functions&lt;br&gt;
&lt;div class="outline-text-5" id="text-org6359522"&gt;
&lt;p&gt;
Snorkel provides a &lt;a href="https://snorkel.readthedocs.io/en/master/packages/_autosummary/labeling/snorkel.labeling.LFAnalysis.html"&gt;LFAnalysis&lt;/a&gt; class to help you see how well the labeling functions do.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;analysis = LFAnalysis(L=train_labeling_matrix, lfs=labeling_functions)
print(TABLE(analysis.lf_summary()))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;j&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Polarity&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Coverage&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Overlaps&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Conflicts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;check&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.257576&lt;/td&gt;
&lt;td class="org-right"&gt;0.212843&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;check_out&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.212843&lt;/td&gt;
&lt;td class="org-right"&gt;0.212843&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
This is what the table is giving us for each of the labeling functions:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;i&gt;j&lt;/i&gt; : I think this is just an index&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Polarity&lt;/i&gt;: The number of unique values the function puts out (other than -1, which is interpreted as an un-labeled row)&lt;/li&gt;
&lt;li&gt;/Coverage: The fraction of the data-set that the function labeled&lt;/li&gt;
&lt;li&gt;/Overlaps: The fraction of the data that the function labeled and at least one other function also labeled&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Conflicts&lt;/i&gt;: The fraction of the data that the function labeled something different from at least one other function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
So it looks like &lt;code&gt;check&lt;/code&gt; covers slightly more than &lt;code&gt;check_out&lt;/code&gt;, and they don't disagree with each other at all. This makes sense when you consider that &lt;code&gt;check&lt;/code&gt; is a sub-string of &lt;code&gt;check out&lt;/code&gt; - we can guess that all the overlaps are cases where &lt;code&gt;check out&lt;/code&gt; were found in the comment.
&lt;/p&gt;

&lt;p&gt;
We can also pass it a set of labels and it will see how well the functions did. In this case we have labels for all the rows, but in most cases we won't just for the development set so we'll use it here.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(TABLE(LFAnalysis(
    L=development_labeling_matrix,
    lfs=labeling_functions).lf_summary(Y=development.CLASS.values)))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;j&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Polarity&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Coverage&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Overlaps&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Conflicts&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Correct&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Incorrect&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Emp. Acc.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;check&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.26&lt;/td&gt;
&lt;td class="org-right"&gt;0.225&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;49&lt;/td&gt;
&lt;td class="org-right"&gt;3&lt;/td&gt;
&lt;td class="org-right"&gt;0.942308&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;check_out&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.225&lt;/td&gt;
&lt;td class="org-right"&gt;0.225&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;45&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/b&gt; The &lt;code&gt;LFAnalysis&lt;/code&gt; class works with &lt;code&gt;numpy&lt;/code&gt; arrays, so when I called the &lt;code&gt;lf_summary&lt;/code&gt; method I had to pass in the &lt;code&gt;values&lt;/code&gt; and not the &lt;code&gt;CLASS&lt;/code&gt; Series.
&lt;/p&gt;

&lt;p&gt;
With our development set, the functions cover slightly less than before (as a fraction of the total), and although &lt;code&gt;check&lt;/code&gt; covers slightly more that &lt;code&gt;check_out&lt;/code&gt;, it also has some false-postives, so we'd have to decide if we care about getting all the spam or not accidentally labeling non-spam as spam.
&lt;/p&gt;

&lt;p&gt;
We can also check which ones were mis-labeled to get a better idea of how off they were.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;buckets = get_label_buckets(development.CLASS.values, development_labeling_matrix[:, 0])
for key, value in buckets.items():
    print(key)
    print(value)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
(0, -1)
[  0   1   2   3   4   7   9  10  11  12  13  15  16  17  19  22  27  28
  33  34  35  39  41  43  44  46  48  49  50  51  52  53  55  57  58  61
  62  65  66  68  78  79  81  82  86  88  89  92  94  95  98  99 100 103
 104 105 107 108 112 113 114 120 121 122 123 124 125 128 129 131 133 135
 141 142 144 146 148 150 153 154 155 162 165 166 167 168 171 173 174 179
 182 183 184 190 191 195 196 197]
(1, 1)
[  5  14  23  25  29  36  40  42  45  59  67  69  71  73  74  75  76  77
  80  83  87  90  91  93 101 109 110 116 117 126 127 134 138 139 140 143
 149 151 157 160 163 164 169 172 186 189 192 193 198]
(1, -1)
[  6   8  18  20  21  24  26  30  31  32  38  47  54  56  60  63  64  70
  72  84  85  96  97 102 106 111 115 119 130 132 136 137 145 147 152 156
 158 159 161 175 176 177 178 180 181 185 187 188 194 199]
(0, 1)
[ 37 118 170]
&lt;/pre&gt;

&lt;p&gt;
Buckets is a dict whose keys are tuples of (actual classes, predicted classes) and whose values are the indices of the rows matching the keys (so the key &lt;code&gt;(0, 1)&lt;/code&gt; returns the indices for rows where we labeled the comment as spam but it wasn't). Looking at the output you can see that the last key (0, 1) has the cases that we labeled as spam when they weren't, let's take a look at them.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for comment in development.iloc[buckets[(Comment.is_ham, Comment.is_spam)]]["CONTENT"]:
    print(comment)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
i turned it on mute as soon is i came on i just wanted to check the  views...﻿
i check back often to help reach 2x10^9 views and I avoid watching Baby﻿
Admit it you just came here to check the number of viewers ﻿
&lt;/pre&gt;


&lt;p&gt;
It's not obvious to me how you should handle those.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="orgb1175e3"&gt;&lt;/a&gt;Check Out But Not Check&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgb1175e3"&gt;
&lt;p&gt;
What are some training examples that &lt;code&gt;check&lt;/code&gt; labels but &lt;code&gt;check_out&lt;/code&gt; doesn't? We can check by feeding the columns from the labeling matrix for the &lt;code&gt;check&lt;/code&gt; and &lt;code&gt;check_out&lt;/code&gt; functions and see where &lt;code&gt;check_out&lt;/code&gt; abstained and &lt;code&gt;check&lt;/code&gt; didn't. I said earlier that the first argument to &lt;code&gt;get_label_buckets&lt;/code&gt; is the actual label, but really you can feed any two arrays and it will find give you the indices for the permutations of their row-values.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;buckets = get_label_buckets(train_labeling_matrix[:, 0], train_labeling_matrix[:, 1])
sampled = train.iloc[buckets[(Comment.is_spam, Comment.is_ambiguous)]].sample(10, random_state=Data.random_seed)
for sample in sampled.itertuples():
    print(sample.CONTENT)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Lil m !!!!! Check hi out!!!!! Does live the way you lie and many more ! Check it out!!! And subscribe
https://soundcloud.com/artady please check my stuff; and make some feedback﻿
Hey guys can you check my channel out plz. I do mine craft videos. Let's  shoot for 20 subs﻿
┏━━━┓┏┓╋┏┓┏━━━┓┏━━━┓┏┓╋╋┏┓  ┃┏━┓┃┃┃╋┃┃┃┏━┓┃┗┓┏┓┃┃┗┓┏┛┃  ┃┗━━┓┃┗━┛┃┃┃╋┃┃╋┃┃┃┃┗┓┗┛┏  ┗━━┓┃┃┏━┓┃┃┗━┛┃╋┃┃┃┃╋┗┓┏┛  ┃┗━┛┃┃┃╋┃┃┃┏━┓┃┏┛┗┛┃╋╋┃┃  ┗━━━┛┗┛╋┗┛┗┛╋┗┛┗━━━┛╋╋┗┛ CHECK MY VIDEOS AND SUBSCRIBE AND LIKE PLZZ
if you like raw talent, raw lyrics, straight real hip hop Everyone check my newest sound  Dizzy X - Got the Juice (Prod by. Drugs the Model Citizen)   COMMENT TELL ME WHAT YOU THINK  DONT BE LAZY!!!!  - 1/7 Prophetz﻿
check it out free stuff for watching videos and filling surveys&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;a href="http://www.prizerebel.com/index.php?r=1446084"&amp;gt;http://www.prizerebel.com/index.php?r=1446084&amp;lt;/a&amp;gt;﻿
Hey! I'm NERDY PEACH and I'm a new youtuber and it would mean THE ABSOLUTE  world to me if you could check 'em out! &amp;amp;lt;3  Hope you like them! =D﻿
Check my first video out﻿
http://tankionline.com#friend=cd92db3f4 great game check it out!﻿
hi beaties! i made a new channel please go check it out and subscribe and  enjoy!﻿
&lt;/pre&gt;

&lt;p&gt;
I'm going to deviate from the tutorial a little and create a regular expression to match any comment with "check" and not "view" to avoid cases where the commenter is saying that they're checking out how many views the video had.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;EXPRESSION = re.compile(r"check(?!.*view)")

assert EXPRESSION.search("everyone please come check our newest song in memories of Martin Luther  King Jr.﻿")
assert EXPRESSION.search("and u should.d check my channel and tell me what I should do next!﻿")
assert not EXPRESSION.search("Admit it you just came here to check the number of viewers ﻿")

@labeling_function()
def re_check_out(row: pandas.Series) -&amp;gt; int:
    """match cases with 'check' but not view"""
    return Comment.is_spam if EXPRESSION.search(row.CONTENT.lower()) else Comment.is_ambiguous
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;labeling_functions = [check, check_out, re_check_out]
applier = PandasLFApplier(lfs=labeling_functions)
train_labeling_matrix = applier.apply(df=train, progress_bar=False)
development_labeling_matrix = applier.apply(df=development, progress_bar=False)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;analysis = LFAnalysis(L=train_labeling_matrix, lfs=labeling_functions)
print(TABLE(analysis.lf_summary()))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;j&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Polarity&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Coverage&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Overlaps&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Conflicts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;check&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.257576&lt;/td&gt;
&lt;td class="org-right"&gt;0.248196&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;check_out&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.212843&lt;/td&gt;
&lt;td class="org-right"&gt;0.212843&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;re_check_out&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.243146&lt;/td&gt;
&lt;td class="org-right"&gt;0.243146&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
Our &lt;code&gt;re_check_out&lt;/code&gt; function has a little less coverage than &lt;code&gt;check&lt;/code&gt; as we'd expect, since it excludes reviews with "view" in them but it also covers a little more than &lt;code&gt;check_out&lt;/code&gt;.
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(TABLE(LFAnalysis(
    L=development_labeling_matrix,
    lfs=labeling_functions).lf_summary(Y=development.CLASS.values)))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;j&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Polarity&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Coverage&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Overlaps&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Conflicts&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Correct&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Incorrect&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Emp. Acc.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;check&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.26&lt;/td&gt;
&lt;td class="org-right"&gt;0.245&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;49&lt;/td&gt;
&lt;td class="org-right"&gt;3&lt;/td&gt;
&lt;td class="org-right"&gt;0.942308&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;check_out&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.225&lt;/td&gt;
&lt;td class="org-right"&gt;0.225&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;45&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;re_check_out&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.245&lt;/td&gt;
&lt;td class="org-right"&gt;0.245&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;49&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
It looks like we were able to avoid the false-positives by adding our regular expression.
&lt;/p&gt;



&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;buckets = get_label_buckets(development_labeling_matrix[:, 0], development_labeling_matrix[:,2])
for comment in development.iloc[buckets[(Comment.is_spam, Comment.is_ambiguous)]]["CONTENT"]:
    print(comment)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
i turned it on mute as soon is i came on i just wanted to check the  views...﻿
i check back often to help reach 2x10^9 views and I avoid watching Baby﻿
Admit it you just came here to check the number of viewers ﻿
&lt;/pre&gt;


&lt;p&gt;
So it looks like we got rid of some false positives but also missed some spam by using the regular expression. We could probably grab more by searching for "my" as well.
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0eb4199" class="outline-3"&gt;
&lt;h3 id="org0eb4199"&gt;Using TextBlob with a Preprocessor&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0eb4199"&gt;
&lt;p&gt;
Here we'll use text-blobs sentiment scorer to find comments that aren't spam. To do this we'll need to use snorkel's Preprocessor, which maps data using black-box functions.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@preprocessor(memoize=True)
def textblob_sentiment(row: pandas.Series) -&amp;gt; pandas.Series:
    """Add the polarity and subjectivity of the comment's sentiment

    This adds two columns ('polarity' and 'subjectivity') based on the comment

    """
    blob = TextBlob(row.CONTENT)
    row["polarity"] = blob.sentiment.polarity
    row["subjectivity"] = blob.sentiment.subjectivity
    return row
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The &lt;code&gt;polarity&lt;/code&gt; is a value from -1.0 to 1.0 which reflects how negative or positive the text is believed to be. The &lt;code&gt;subjectivity&lt;/code&gt; is a value from 0.0 to 1.0 which reflects whether the text is objective or subjective - whether it is a statement of fact or opinion.
&lt;/p&gt;

&lt;p&gt;
Now that we have the pre-processor we can use it with a labeling function.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3f9b491" class="outline-4"&gt;
&lt;h4 id="org3f9b491"&gt;Polarity&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3f9b491"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@labeling_function(pre=[textblob_sentiment])
def textblob_polarity(row: pandas.Series) -&amp;gt; int:
    """decides if the comment is ham based on the polarity of the sentiment"""
    return Comment.is_ham if row.polarity &amp;gt; 0.9 else Comment.is_ambiguous
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfe2eafc" class="outline-4"&gt;
&lt;h4 id="orgfe2eafc"&gt;Subjectivity&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgfe2eafc"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@labeling_function(pre=[textblob_sentiment])
def textblob_subjectivity(row: pandas.Series) -&amp;gt; int:
    """decides if the comment is ham based on the subjectivity"""
    return Comment.is_ham if row.subjectivity &amp;gt; 0.5 else Comment.is_ambiguous
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org76d0eee" class="outline-4"&gt;
&lt;h4 id="org76d0eee"&gt;Analyzing the Performance&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org76d0eee"&gt;
&lt;p&gt;
Once again, now that we have labeling functions we need to analyze how well they do.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;labeling_functions = [textblob_polarity, textblob_subjectivity]
applier = PandasLFApplier(lfs=labeling_functions)
train_label_matrix = applier.apply(train, progress_bar=False)
development_label_matrix = applier.apply(development, progress_bar=False)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(TABLE(LFAnalysis(train_label_matrix, labeling_functions).lf_summary()))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;j&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Polarity&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Coverage&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Overlaps&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Conflicts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;textblob_polarity&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;[0]&lt;/td&gt;
&lt;td class="org-right"&gt;0.033189&lt;/td&gt;
&lt;td class="org-right"&gt;0.0122655&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;textblob_subjectivity&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;[0]&lt;/td&gt;
&lt;td class="org-right"&gt;0.32684&lt;/td&gt;
&lt;td class="org-right"&gt;0.0122655&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(TABLE(LFAnalysis(development_label_matrix, labeling_functions).lf_summary(Y=development.CLASS.values)))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;j&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Polarity&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Coverage&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Overlaps&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Conflicts&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Correct&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Incorrect&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Emp. Acc.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;textblob_polarity&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;[0]&lt;/td&gt;
&lt;td class="org-right"&gt;0.05&lt;/td&gt;
&lt;td class="org-right"&gt;0.025&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;9&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;0.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;textblob_subjectivity&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;[0]&lt;/td&gt;
&lt;td class="org-right"&gt;0.3&lt;/td&gt;
&lt;td class="org-right"&gt;0.025&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;32&lt;/td&gt;
&lt;td class="org-right"&gt;28&lt;/td&gt;
&lt;td class="org-right"&gt;0.533333&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
Subjectivity seems to have much better coverage, but it was also fairly inaccurate.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgba3195b" class="outline-3"&gt;
&lt;h3 id="orgba3195b"&gt;More Labeling Functions&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgba3195b"&gt;
&lt;p&gt;
We previously created a keyword-based labeling function for "check". Because using keywords is such a common thing Snorkel has a way to create them with a little less work than creating the labeling functions individually.
&lt;/p&gt;

&lt;p&gt;
First we make a function that checks if any of a collection of keywords is in the comment.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def lookup_keyword(row: pandas.Series, keywords: list, label: int) -&amp;gt; int:
    """check if any of the keywords are in the comment

    Args:
     row: the series with the Comment
     keywords: collection of keywords indicating spam
     label: what to return if the keyword is in the comment

    Returns:
     label if keyword in comment else -1
    """
    return label if any(keyword in row.CONTENT.lower() for keyword in keywords) else Comment.is_ambiguous
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now we make the labeling-function creator that uses the &lt;code&gt;lookup_keyword&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def make_keyword_labeling_function(keywords: list, label: int=Comment.is_spam) -&amp;gt; LabelingFunction:
    """Makes LabelingFunction objects that check keywords"""
    return LabelingFunction(
	name=f"keyword_{keywords[0]}",
	f=lookup_keyword,
	resources=dict(keywords=keywords, label=label)
    )
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;keyword_my = make_keyword_labeling_function(keywords=["my"])
keyword_subscribe = make_keyword_labeling_function(keywords=["subscribe"])
keyword_link = make_keyword_labeling_function(keywords=["http"])
keyword_please = make_keyword_labeling_function(keywords=["please", "plz"])
keyword_song = make_keyword_labeling_function(keywords=["song"], label=Comment.is_ham)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;labeling_functions = [
    keyword_my,
    keyword_subscribe,
    keyword_link,
    keyword_please,
    keyword_song,
]
applier = PandasLFApplier(lfs=labeling_functions)
train_label_matrix = applier.apply(train, progress_bar=False)
development_label_matrix = applier.apply(development, progress_bar=False)
print(TABLE(LFAnalysis(development_label_matrix, labeling_functions).lf_summary(Y=development.CLASS.values)))
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt; &lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;j&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Polarity&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Coverage&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Overlaps&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Conflicts&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Correct&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Incorrect&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Emp. Acc.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;keyword_my&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.18&lt;/td&gt;
&lt;td class="org-right"&gt;0.115&lt;/td&gt;
&lt;td class="org-right"&gt;0.05&lt;/td&gt;
&lt;td class="org-right"&gt;33&lt;/td&gt;
&lt;td class="org-right"&gt;3&lt;/td&gt;
&lt;td class="org-right"&gt;0.916667&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;keyword_subscribe&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.125&lt;/td&gt;
&lt;td class="org-right"&gt;0.075&lt;/td&gt;
&lt;td class="org-right"&gt;0.015&lt;/td&gt;
&lt;td class="org-right"&gt;25&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;keyword_http&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.09&lt;/td&gt;
&lt;td class="org-right"&gt;0.03&lt;/td&gt;
&lt;td class="org-right"&gt;0.005&lt;/td&gt;
&lt;td class="org-right"&gt;16&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-right"&gt;0.888889&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;keyword_please&lt;/td&gt;
&lt;td class="org-right"&gt;3&lt;/td&gt;
&lt;td class="org-left"&gt;[1]&lt;/td&gt;
&lt;td class="org-right"&gt;0.095&lt;/td&gt;
&lt;td class="org-right"&gt;0.08&lt;/td&gt;
&lt;td class="org-right"&gt;0.02&lt;/td&gt;
&lt;td class="org-right"&gt;19&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;keyword_song&lt;/td&gt;
&lt;td class="org-right"&gt;4&lt;/td&gt;
&lt;td class="org-left"&gt;[0]&lt;/td&gt;
&lt;td class="org-right"&gt;0.16&lt;/td&gt;
&lt;td class="org-right"&gt;0.06&lt;/td&gt;
&lt;td class="org-right"&gt;0.06&lt;/td&gt;
&lt;td class="org-right"&gt;20&lt;/td&gt;
&lt;td class="org-right"&gt;12&lt;/td&gt;
&lt;td class="org-right"&gt;0.625&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
There are varying degrees of coveragen and accuracy with these. Interestingly, the &lt;code&gt;subscribe&lt;/code&gt; keyword was completely accurate and had pretty good coverage (compared to our check-out labelers).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org4575456" class="outline-3"&gt;
&lt;h3 id="org4575456"&gt;Adding a Spacy Preprocessor&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4575456"&gt;
&lt;p&gt;
The purpose of the pre-processors is to do a little feature engineering to add features that aren't in the original dataset but which can be derived from it. Becaues SpaCY is used so much for this, snorkel comes with a labeling function that adds a &lt;code&gt;doc&lt;/code&gt; attribute (you can also create it manually to get more control).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@nlp_labeling_function()
def short_with_person(row: pandas.Series) -&amp;gt; int:
    """Check if the comment is short and mentions a person"""
    return (Comment.is_ham if (len(row.CONTENT) &amp;lt; 20 and any((entity.label_=="PERSON" for entity in row.dot.ents)))
			       else Comment.is_ambiguous)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>data</category><category>exploration</category><category>snorkel</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/snorkel/snorkel-data-labeling/</guid><pubDate>Fri, 10 Jan 2020 01:07:33 GMT</pubDate></item><item><title>Trying out DABEST</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/#org27a196f"&gt;Beginning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/#org9d3e203"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/#org07e536a"&gt;Set Up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/#orgabbb33d"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/#orga8af6cb"&gt;Petal Width&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/#orgbcd0497"&gt;Hedge's G&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/#org91c1a78"&gt;Cohen's D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org27a196f" class="outline-2"&gt;
&lt;h2 id="org27a196f"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org27a196f"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9d3e203" class="outline-3"&gt;
&lt;h3 id="org9d3e203"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9d3e203"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6c3bc52" class="outline-4"&gt;
&lt;h4 id="org6c3bc52"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org6c3bc52"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from sklearn.datasets import load_iris
import dabest
import pandas
import seaborn
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org07e536a" class="outline-3"&gt;
&lt;h3 id="org07e536a"&gt;Set Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org07e536a"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7515a90" class="outline-4"&gt;
&lt;h4 id="org7515a90"&gt;The Data Set&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7515a90"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iris = load_iris()
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(iris.DESCR)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Iris plants dataset
--------------------

**Data Set Characteristics:**

    :Number of Instances: 150 (50 in each of three classes)
    :Number of Attributes: 4 numeric, predictive attributes and the class
    :Attribute Information:
        - sepal length in cm
        - sepal width in cm
        - petal length in cm
        - petal width in cm
        - class:
                - Iris-Setosa
                - Iris-Versicolour
                - Iris-Virginica
                
    :Summary Statistics:

    ============== ==== ==== ======= ===== ====================
                    Min  Max   Mean    SD   Class Correlation
    ============== ==== ==== ======= ===== ====================
    sepal length:   4.3  7.9   5.84   0.83    0.7826
    sepal width:    2.0  4.4   3.05   0.43   -0.4194
    petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)
    petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)
    ============== ==== ==== ======= ===== ====================

    :Missing Attribute Values: None
    :Class Distribution: 33.3% for each of 3 classes.
    :Creator: R.A. Fisher
    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)
    :Date: July, 1988

The famous Iris database, first used by Sir R.A. Fisher. The dataset is taken
from Fisher's paper. Note that it's the same as in R, but not as in the UCI
Machine Learning Repository, which has two wrong data points.

This is perhaps the best known database to be found in the
pattern recognition literature.  Fisher's paper is a classic in the field and
is referenced frequently to this day.  (See Duda &amp;amp; Hart, for example.)  The
data set contains 3 classes of 50 instances each, where each class refers to a
type of iris plant.  One class is linearly separable from the other 2; the
latter are NOT linearly separable from each other.

.. topic:: References

   - Fisher, R.A. "The use of multiple measurements in taxonomic problems"
     Annual Eugenics, 7, Part II, 179-188 (1936); also in "Contributions to
     Mathematical Statistics" (John Wiley, NY, 1950).
   - Duda, R.O., &amp;amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis.
     (Q327.D83) John Wiley &amp;amp; Sons.  ISBN 0-471-22361-1.  See page 218.
   - Dasarathy, B.V. (1980) "Nosing Around the Neighborhood: A New System
     Structure and Classification Rule for Recognition in Partially Exposed
     Environments".  IEEE Transactions on Pattern Analysis and Machine
     Intelligence, Vol. PAMI-2, No. 1, 67-71.
   - Gates, G.W. (1972) "The Reduced Nearest Neighbor Rule".  IEEE Transactions
     on Information Theory, May 1972, 431-433.
   - See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al"s AUTOCLASS II
     conceptual clustering system finds 3 classes in the data.
   - Many, many more ...
&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;data = pandas.DataFrame(iris.data, columns=iris.feature_names)
target = pandas.Series(iris.target)
names = dict(zip(range(len(iris.target_names)), iris.target_names))
data["species"] = target.map(names)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgabbb33d" class="outline-2"&gt;
&lt;h2 id="orgabbb33d"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgabbb33d"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga8af6cb" class="outline-3"&gt;
&lt;h3 id="orga8af6cb"&gt;Petal Width&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga8af6cb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iris_dabest = dabest.load(data=data, x="species", y="petal width (cm)", idx=iris.target_names)
iris_dabest.mean_diff.plot()
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/petal_width.png" alt="petal_width.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbcd0497" class="outline-3"&gt;
&lt;h3 id="orgbcd0497"&gt;Hedge's G&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbcd0497"&gt;
&lt;p&gt;
&lt;a href="https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/hedgeg.htm"&gt;Hedges G&lt;/a&gt; is a measurement of effect size, similar to Cohen's d but with better properties when the samples are smaller or the sample sizes are different.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iris_dabest.hedges_g.plot()
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/hedges_g.png" alt="hedges_g.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(iris_dabest.hedges_g)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
DABEST v0.2.7
=============
             
Good afternoon!
The current time is Mon Dec 16 15:56:24 2019.

The unpaired Hedges' g between setosa and versicolor is 6.76 [95%CI 5.71, 7.86].
The two-sided p-value of the Mann-Whitney test is 2.28e-18.

The unpaired Hedges' g between setosa and virginica is 8.49 [95%CI 7.08, 9.77].
The two-sided p-value of the Mann-Whitney test is 2.43e-18.

5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated.
The p-value(s) reported are the likelihood(s) of observing the effect size(s),
if the null hypothesis of zero difference is true.

To get the results of all valid statistical tests, use `.hedges_g.statistical_tests`
&lt;/pre&gt;

&lt;p&gt;
According to &lt;a href="https://www.wikiwand.com/en/Effect_size"&gt;Wikipedia&lt;/a&gt;, an effect size of 2 is "huge" so since the differences between the setosa and versicolor and setosa and virginica are 6.76 and 8.49 respectively, we might conclude that there is a significant difference between the petal width of the setosa and the other two species.
&lt;/p&gt;

&lt;p&gt;
I don't think that's really what this is meant for, but I just wanted to see how it works.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org91c1a78" class="outline-3"&gt;
&lt;h3 id="org91c1a78"&gt;Cohen's D&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org91c1a78"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iris_dabest.cohens_d.plot()
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/cohens_d.png" alt="cohens_d.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(iris_dabest.cohens_d)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
DABEST v0.2.7
=============
             
Good afternoon!
The current time is Mon Dec 16 16:46:25 2019.

The unpaired Cohen's d between setosa and versicolor is 6.82 [95%CI 5.76, 7.92].
The two-sided p-value of the Mann-Whitney test is 2.28e-18.

The unpaired Cohen's d between setosa and virginica is 8.56 [95%CI 7.13, 9.85].
The two-sided p-value of the Mann-Whitney test is 2.43e-18.

5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated.
The p-value(s) reported are the likelihood(s) of observing the effect size(s),
if the null hypothesis of zero difference is true.

To get the results of all valid statistical tests, use `.cohens_d.statistical_tests`
&lt;/pre&gt;

&lt;p&gt;
In this case the Cohen's d and Hedges g look similar.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>exploration</category><category>statistics</category><category>visualization</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/trying-out-dabest/</guid><pubDate>Mon, 16 Dec 2019 21:50:24 GMT</pubDate></item><item><title>High School Contact Networks</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/#org36be5f3"&gt;The Departure&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/#org18937e6"&gt;Setup The Plotting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/#orgb197d36"&gt;Load The Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/#org46708c4"&gt;The Descent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/#orgda05c30"&gt;End&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/#org06839b0"&gt;Citations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org36be5f3" class="outline-2"&gt;
&lt;h2 id="org36be5f3"&gt;The Departure&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org36be5f3"&gt;
&lt;p&gt;
This looks at data provided by &lt;a href="http://www.sociopatterns.org"&gt;SocioPatterns&lt;/a&gt; that looks a the interactions between students at a High School in Marseilles, France, in December of 2013.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgaa36493" class="outline-4"&gt;
&lt;h4 id="orgaa36493"&gt;Imports&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgaa36493"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org74f5a32" class="outline-5"&gt;
&lt;h5 id="org74f5a32"&gt;From Python&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org74f5a32"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from collections import Counter
from functools import partial
from pathlib import Path
import os
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge0f2beb" class="outline-5"&gt;
&lt;h5 id="orge0f2beb"&gt;From PyPi&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-orge0f2beb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from bokeh.models import HoverTool
from dotenv import load_dotenv
from holoviews import dim, opts
from holoviews.operation.datashader import datashade, bundle_graph
import holoviews
import hvplot.pandas
import networkx
import pandas as pandas
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgafabdfd" class="outline-5"&gt;
&lt;h5 id="orgafabdfd"&gt;My Stuff&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-orgafabdfd"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from graeae.timers import Timer
from graeae.visualization import EmbedHoloview
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga187748" class="outline-4"&gt;
&lt;h4 id="orga187748"&gt;Load the Dotenv&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orga187748"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;load_dotenv(".env")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgda84400" class="outline-4"&gt;
&lt;h4 id="orgda84400"&gt;Build the Timer&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgda84400"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TIMER = Timer()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org18937e6" class="outline-3"&gt;
&lt;h3 id="org18937e6"&gt;Setup The Plotting&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org18937e6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;holoviews.extension("bokeh")
SLUG = "high-school-contact-networks/"
output = Path("../../files/posts/networks/" + SLUG)
Embed = partial(EmbedHoloview, folder_path=output)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Plot:
    """Constants for plotting"""
    width = 1000
    height = 800
    fontsize = 18
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb197d36" class="outline-3"&gt;
&lt;h3 id="orgb197d36"&gt;Load The Data&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb197d36"&gt;
&lt;p&gt;
Let's take a look at the data before loading it into pandas.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HIGH_SCHOOL = Path(os.environ.get("HIGH_SCHOOL")).expanduser()
assert HIGH_SCHOOL.is_dir()

#+begin_src ipython :session highschool :results none
class Files:
    metadata = "metadata_2013.txt"
    contact_diaries = "Contact-diaries-network_data_2013.csv"
    facebook = "Facebook-known-pairs_data_2013.csv"
    friendship = "Friendship-network_data_2013.csv"
    high_school = "High-School_data_2013.csv"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7df7f26" class="outline-4"&gt;
&lt;h4 id="org7df7f26"&gt;MetaData&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7df7f26"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;metadata_path = HIGH_SCHOOL.joinpath(Files.metadata)
assert metadata_path.is_file()
with metadata_path.open() as reader:
    for line in range(5):
	print(reader.readline(), end="")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
650	2BIO1	F
498	2BIO1	F
627	2BIO1	F
857	2BIO1	F
487	2BIO1	F

&lt;/pre&gt;

&lt;p&gt;
This first file has the meta-data for the students. The three columns are the student's ID, class, and gender.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;meta_data = pandas.read_csv(metadata_path, sep="\t", 
			    names=["id", "class", "gender"])
meta_data.loc[:, "class"] = meta_data["class"].astype("category")
meta_data.loc[:, "gender"] = meta_data.gender.astype("category")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org8b55f3a" class="outline-5"&gt;
&lt;h5 id="org8b55f3a"&gt;Classes&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org8b55f3a"&gt;
&lt;p&gt;
First a bar-plot to look at how the classes are distributed.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grouped = meta_data.groupby(["class", "gender"]).agg(
    {"class": "count", "gender": "count"})
grouped.columns = ["class_count", "gender_count"]
grouped = grouped.reset_index()
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Class Counts by Gender", 
			  x="class", y="class_count", 
			  stacked=True,
			  by="gender", height=Plot.height, 
			  width=Plot.width,
			  ylabel="Count",
			  xlabel="Class",
			  tools=["hover"],
			  fontsize=Plot.fontsize).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts_stacked", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/gender_counts_stacked.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/gender_counts_stacked.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
This is a look at the same thing except not stacked.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Class Counts by Gender", x="class", 
			  y="class_count",
			  xlabel="Class",
			  ylabel="Count",
			  by="gender", height=Plot.height, width=Plot.width, 
			  tools=["hover"],
			  fontsize=Plot.fontsize).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/gender_counts.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/gender_counts.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Strangely, the classes that start with &lt;code&gt;2BIO&lt;/code&gt; are more female while the others are more male.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org158c9e3" class="outline-5"&gt;
&lt;h5 id="org158c9e3"&gt;Gender&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org158c9e3"&gt;
&lt;p&gt;
A stacked bar plot to get a sense of not just the distribution among genders but among classes.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
			  stacked=True,
			  by="class", 
			  xlabel="Count",
			  ylabel="Gender",
			  fontsize=Plot.fontsize,
			  width=Plot.width,
			  height=Plot.height).opts(
			      xrotation=90, 
			      xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts_stacked", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/class_counts_stacked.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/class_counts_stacked.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
A non-stacked bar plot to get a better sense of how the genders fill the different classes.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
			  xlabel="Gender",
			  ylabel="Count",
			  by="class", 
			  height=Plot.height,
			  width=Plot.width,
			  fontsize=Plot.fontsize).opts(
			      xrotation=90, xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/class_counts.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/class_counts.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
It looks like there were a little more males than females, but not a whole lot more.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org46708c4" class="outline-2"&gt;
&lt;h2 id="org46708c4"&gt;The Descent&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org46708c4"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0bde5e0" class="outline-4"&gt;
&lt;h4 id="org0bde5e0"&gt;The Contact Network&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org0bde5e0"&gt;
&lt;p&gt;
This is a dataset that shows whether a student logged contact with another student.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;contact_path = HIGH_SCHOOL.joinpath(Files.contact_diaries)
assert contact_path.is_file()
with contact_path.open() as reader:
    for line in range(5):
	print(reader.readline(), end="")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
3 28 2
3 106 1
3 147 4
3 177 1
3 295 4

&lt;/pre&gt;

&lt;p&gt;
The columns are the person who was making the report, the person that was identified as a contact, and the time spent ecoded into one of four values.
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-right"&gt;Code&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Lower Limit (minutes)&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Upper Limit (minutes)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;td class="org-right"&gt;0&lt;/td&gt;
&lt;td class="org-right"&gt;5&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;td class="org-right"&gt;5&lt;/td&gt;
&lt;td class="org-right"&gt;15&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;3&lt;/td&gt;
&lt;td class="org-right"&gt;15&lt;/td&gt;
&lt;td class="org-right"&gt;60&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;4&lt;/td&gt;
&lt;td class="org-right"&gt;60&lt;/td&gt;
&lt;td class="org-right"&gt;infinity&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;contact_data = pandas.read_csv(contact_path, delimiter=" ", 
				  names=["reporter", "contact", "time"])
contact_data = contact_data.dropna()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgda05c30" class="outline-2"&gt;
&lt;h2 id="orgda05c30"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgda05c30"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org06839b0" class="outline-3"&gt;
&lt;h3 id="org06839b0"&gt;Citations&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org06839b0"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;R. Mastrandrea, J. Fournet, A. Barrat,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Contact patterns in a high school: a comparison between data collected using wearable sensors, contact diaries and friendship surveys.
PLoS ONE 10(9): e0136497 (2015)
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>exploration</category><category>networks</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-contact-networks/</guid><pubDate>Thu, 28 Mar 2019 00:38:17 GMT</pubDate></item><item><title>High School Facebook Networks</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#orgaba815e"&gt;The Departure&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#org6fa4f25"&gt;Setup The Plotting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#org0da8fc5"&gt;Load The Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#orgc6dcb87"&gt;The Descent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#org72ff7a6"&gt;The Descent&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#org4218d59"&gt;Looking at the Friendship Network&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#org86021ca"&gt;End&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/#orge0dc4e7"&gt;Citations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgaba815e" class="outline-2"&gt;
&lt;h2 id="orgaba815e"&gt;The Departure&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgaba815e"&gt;
&lt;p&gt;
This looks at data provided by &lt;a href="http://www.sociopatterns.org"&gt;SocioPatterns&lt;/a&gt; that looks a the interactions between students at a High School in Marseilles, France, in December of 2013.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1469f73" class="outline-4"&gt;
&lt;h4 id="org1469f73"&gt;Imports&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1469f73"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgea379bd" class="outline-5"&gt;
&lt;h5 id="orgea379bd"&gt;From Python&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-orgea379bd"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from collections import Counter
from functools import partial
from pathlib import Path
import os
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4d663bb" class="outline-5"&gt;
&lt;h5 id="org4d663bb"&gt;From PyPi&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org4d663bb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from bokeh.models import HoverTool
from dotenv import load_dotenv
from holoviews import dim, opts
from holoviews.operation.datashader import datashade, bundle_graph
import holoviews
import hvplot.pandas
import networkx
import pandas as pandas
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2c9ad27" class="outline-5"&gt;
&lt;h5 id="org2c9ad27"&gt;My Stuff&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org2c9ad27"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from graeae.timers import Timer
from graeae.visualization import EmbedBokeh, EmbedHoloview
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org66183a2" class="outline-4"&gt;
&lt;h4 id="org66183a2"&gt;Load the Dotenv&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org66183a2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;load_dotenv(".env")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2bb6374" class="outline-4"&gt;
&lt;h4 id="org2bb6374"&gt;Build the Timer&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org2bb6374"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TIMER = Timer()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6fa4f25" class="outline-3"&gt;
&lt;h3 id="org6fa4f25"&gt;Setup The Plotting&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org6fa4f25"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;holoviews.extension("bokeh")
SLUG = "high-school-contact-and-friendship-networks/"
output = Path("../../files/posts/networks/" + SLUG)
Embed = partial(EmbedHoloview, folder_path=output)
EmbedB = partial(EmbedBokeh, folder_path=output)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Plot:
    """Constants for plotting"""
    width = 1000
    height = 800
    fontsize = 18
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0da8fc5" class="outline-3"&gt;
&lt;h3 id="org0da8fc5"&gt;Load The Data&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0da8fc5"&gt;
&lt;p&gt;
Let's take a look at the data before loading it into pandas.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HIGH_SCHOOL = Path(os.environ.get("HIGH_SCHOOL")).expanduser()
assert HIGH_SCHOOL.is_dir()

#+begin_src ipython :session highschool :results none
class Files:
    metadata = "metadata_2013.txt"
    contact_diaries = "Contact-diaries-network_data_2013.csv"
    facebook = "Facebook-known-pairs_data_2013.csv"
    friendship = "Friendship-network_data_2013.csv"
    high_school = "High-School_data_2013.csv"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcaa72ff" class="outline-4"&gt;
&lt;h4 id="orgcaa72ff"&gt;MetaData&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgcaa72ff"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;metadata_path = HIGH_SCHOOL.joinpath(Files.metadata)
assert metadata_path.is_file()
with metadata_path.open() as reader:
    for line in range(5):
	print(reader.readline(), end="")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
650	2BIO1	F
498	2BIO1	F
627	2BIO1	F
857	2BIO1	F
487	2BIO1	F

&lt;/pre&gt;

&lt;p&gt;
This first file has the meta-data for the students. The three columns are the student's ID, class, and gender.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;meta_data = pandas.read_csv(metadata_path, sep="\t", 
			    names=["id", "class", "gender"])
meta_data.loc[:, "class"] = meta_data["class"].astype("category")
meta_data.loc[:, "gender"] = meta_data.gender.astype("category")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgaee257f" class="outline-5"&gt;
&lt;h5 id="orgaee257f"&gt;Classes&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-orgaee257f"&gt;
&lt;p&gt;
First a bar-plot to look at how the classes are distributed.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grouped = meta_data.groupby(["class", "gender"]).agg(
    {"class": "count", "gender": "count"})
grouped.columns = ["class_count", "gender_count"]
grouped = grouped.reset_index()
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Class Counts by Gender", 
			  x="class", y="class_count", 
			  stacked=True,
			  by="gender", height=Plot.height, 
			  width=Plot.width,
			  ylabel="Count",
			  xlabel="Class",
			  tools=["hover"],
			  fontsize=Plot.fontsize).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts_stacked", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/gender_counts_stacked.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
This is a look at the same thing except not stacked.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Class Counts by Gender", x="class", 
			  y="class_count",
			  xlabel="Class",
			  ylabel="Count",
			  by="gender", height=Plot.height, width=Plot.width, 
			  tools=["hover"],
			  fontsize=Plot.fontsize).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/gender_counts.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
Strangely, the classes that start with &lt;code&gt;2BIO&lt;/code&gt; are more female while the others are more male.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9790ff1" class="outline-5"&gt;
&lt;h5 id="org9790ff1"&gt;Gender&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org9790ff1"&gt;
&lt;p&gt;
A stacked bar plot to get a sense of not just the distribution among genders but among classes.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
			  stacked=True,
			  by="class", 
			  xlabel="Count",
			  ylabel="Gender",
			  fontsize=Plot.fontsize,
			  width=Plot.width,
			  height=Plot.height).opts(
			      xrotation=90, 
			      xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts_stacked", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/class_counts_stacked.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
A non-stacked bar plot to get a better sense of how the genders fill the different classes.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
			  xlabel="Gender",
			  ylabel="Count",
			  by="class", 
			  height=Plot.height,
			  width=Plot.width,
			  fontsize=Plot.fontsize).opts(
			      xrotation=90, xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/class_counts.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
It looks like there were a little more males than females, but not a whole lot more.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc6dcb87" class="outline-2"&gt;
&lt;h2 id="orgc6dcb87"&gt;The Descent&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgc6dcb87"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9a5789c" class="outline-4"&gt;
&lt;h4 id="org9a5789c"&gt;The Facebook Network&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9a5789c"&gt;
&lt;p&gt;
This is a dataset that shows whether a student was &lt;i&gt;facebook&lt;/i&gt; friends with another student.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;facebook_path = HIGH_SCHOOL.joinpath(Files.facebook)
assert facebook_path.is_file()
with facebook_path.open() as reader:
    for line in range(5):
	print(reader.readline(), end="")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
1 984 0
1 883 1
1 941 0
1 650 0
1 132 1

&lt;/pre&gt;

&lt;p&gt;
The columns are &lt;i&gt;one student&lt;/i&gt;, &lt;i&gt;next student&lt;/i&gt;, &lt;i&gt;facebook friends&lt;/i&gt;.
&lt;/p&gt;

&lt;p&gt;
The third column is &lt;i&gt;0&lt;/i&gt; if they aren't facebook friends and &lt;i&gt;1&lt;/i&gt; if they are.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;facebook_data = pandas.read_csv(facebook_path, delimiter=" ", 
				names=["reporter", "other", "friend"])
facebook_data = facebook_data.dropna()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org72ff7a6" class="outline-2"&gt;
&lt;h2 id="org72ff7a6"&gt;The Descent&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org72ff7a6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4218d59" class="outline-3"&gt;
&lt;h3 id="org4218d59"&gt;Looking at the Friendship Network&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org4218d59"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;with TIMER:
    facebook_graph = networkx.convert_matrix.from_pandas_edgelist(
	facebook_data, "reporter", "other", 
	create_using=networkx.DiGraph)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Started: 2019-03-27 23:05:04.495114
Ended: 2019-03-27 23:05:04.499622
Elapsed: 0:00:00.004508

&lt;/pre&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;genders = dict(zip(meta_data.id, meta_data.gender))
classes = dict(zip(meta_data.id, meta_data["class"]))
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for node in facebook_graph.nodes:
    facebook_graph.nodes[node]["gender"] = genders[node]
    facebook_graph.nodes[node]["class"] = classes[node]
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hover = HoverTool(
    tooltips = [
	 ("Gender", "@gender"),
	 ("Class", "@class"),
    ],
)

plot = holoviews.Graph.from_networkx(facebook_graph,
				     networkx.circular_layout).opts(
					 node_color=dim("gender"), cmap="Set1",
					 tools=[hover],
					 fontsize=Plot.fontsize,
					 width=800,
					 height=800,                                        
					 title="Facebook Network by Gender",
					 xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="facebook_network_circular")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/facebook_network_circular.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
It's a little hard to see what's going on here, other than to note that you can see some people are more popular than others.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hover = HoverTool(
    tooltips = [
	 ("Gender", "@gender"),
	 ("Class", "@class"),
    ],
)

plot = holoviews.Graph.from_networkx(facebook_graph,
				     networkx.circular_layout).opts(
					 node_color=dim("class"), cmap="Set1",
					 tools=[hover],
					 fontsize=Plot.fontsize,
					 width=800,
					 height=800,                                        
					 title="Facebook Network by Class",
					 xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="facebook_network_circular_class")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/facebook_network_circular_class.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(facebook_graph, networkx.spring_layout, ).opts(
					 node_color=dim("class"), cmap="Set1",
					 tools=["hover"],
					 width=800,
					 height=800,
					 title="Facebook Network By Class",
					 xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="facebook_network_class_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/facebook_network_class_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(facebook_graph, networkx.spring_layout, ).opts(
					 node_color=dim("gender"), cmap="Set1",
					 tools=["hover"],
					 width=800,
					 height=800,
					 title="Facebook Network By Gender",
					 xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="facebook_network_gender_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/facebook_network_gender_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org86021ca" class="outline-2"&gt;
&lt;h2 id="org86021ca"&gt;End&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org86021ca"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge0dc4e7" class="outline-3"&gt;
&lt;h3 id="orge0dc4e7"&gt;Citations&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge0dc4e7"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;R. Mastrandrea, J. Fournet, A. Barrat,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Contact patterns in a high school: a comparison between data collected using wearable sensors, contact diaries and friendship surveys.
PLoS ONE 10(9): e0136497 (2015)
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>exploration</category><category>networks</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-facebook-networks/</guid><pubDate>Thu, 28 Mar 2019 00:38:17 GMT</pubDate></item><item><title>High School Friendship Networks</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#orgb13cd28"&gt;The Departure&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#org9431853"&gt;Setup The Plotting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#org3171adc"&gt;The Initiation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#orga0dd745"&gt;Meta-Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#org72a4999"&gt;The Friendship Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#org69c5d35"&gt;Looking at the Friendship Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#orgec87e44"&gt;Plotting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#orgfd25c03"&gt;Degree Distribution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#org9c1a4d3"&gt;The Return&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/#orgfd80b1d"&gt;Citations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb13cd28" class="outline-2"&gt;
&lt;h2 id="orgb13cd28"&gt;The Departure&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb13cd28"&gt;
&lt;p&gt;
This looks at data provided by &lt;a href="http://www.sociopatterns.org"&gt;SocioPatterns&lt;/a&gt; that looks a the interactions between students at a High School in Marseilles, France, during the month of December in 2013. In particular, I'm going to look at the &lt;i&gt;Friendship Networks&lt;/i&gt; data - wherein the students reported who they were friends with.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-org275a825" class="outline-4"&gt;
&lt;h4 id="org275a825"&gt;Imports&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org275a825"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org34a3af3" class="outline-5"&gt;
&lt;h5 id="org34a3af3"&gt;From Python&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org34a3af3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from argparse import Namespace
from collections import Counter
from functools import partial
from pathlib import Path
import os
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgaab2679" class="outline-5"&gt;
&lt;h5 id="orgaab2679"&gt;From PyPi&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-orgaab2679"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from bokeh.models import HoverTool, TapTool
from dotenv import load_dotenv
from holoviews import dim, opts
from holoviews.operation.datashader import bundle_graph
import holoviews
import hvplot.pandas
import networkx
import pandas as pandas
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org659a03b" class="outline-5"&gt;
&lt;h5 id="org659a03b"&gt;My Stuff&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org659a03b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from graeae.timers import Timer
from graeae.tables import CountPercentage
from graeae.visualization import EmbedHoloview
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgec60eac" class="outline-4"&gt;
&lt;h4 id="orgec60eac"&gt;Load the Dotenv&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgec60eac"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;load_dotenv(".env")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0f3dffb" class="outline-4"&gt;
&lt;h4 id="org0f3dffb"&gt;Build the Timer&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org0f3dffb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TIMER = Timer()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9431853" class="outline-3"&gt;
&lt;h3 id="org9431853"&gt;Setup The Plotting&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9431853"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;holoviews.extension("bokeh")
SLUG = "high-school-friendship-networks/"
output = Path("../../files/posts/networks/" + SLUG)
Embed = partial(EmbedHoloview, folder_path=output)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Plot = Namespace(
    width = 1000,
    height = 800,
    graph_width = 800,
    graph_height = 800,
    fontsize = 18,
    edge_color = "LightSteelBlue",
    padding = dict(x=(-1.1, 1.1),
		   y=(-1.1, 1.1)),
)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3171adc" class="outline-2"&gt;
&lt;h2 id="org3171adc"&gt;The Initiation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3171adc"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga0dd745" class="outline-3"&gt;
&lt;h3 id="orga0dd745"&gt;Meta-Data&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga0dd745"&gt;
&lt;p&gt;
Let's take a look at the meta-data before loading it into pandas.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;HIGH_SCHOOL = Path(os.environ.get("HIGH_SCHOOL")).expanduser()
assert HIGH_SCHOOL.is_dir()

#+begin_src ipython :session highschool :results none
class Files:
    metadata = "metadata_2013.txt"
    contact_diaries = "Contact-diaries-network_data_2013.csv"
    facebook = "Facebook-known-pairs_data_2013.csv"
    friendship = "Friendship-network_data_2013.csv"
    high_school = "High-School_data_2013.csv"
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;metadata_path = HIGH_SCHOOL.joinpath(Files.metadata)
assert metadata_path.is_file()
with metadata_path.open() as reader:
    for line in range(5):
	print(reader.readline(), end="")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
650	2BIO1	F
498	2BIO1	F
627	2BIO1	F
857	2BIO1	F
487	2BIO1	F

&lt;/pre&gt;

&lt;p&gt;
This file has the meta-data for the students. The three columns are the student's ID, class, and gender. I don't know what &lt;i&gt;class&lt;/i&gt; refers to here. From an American perspective this could mean a particular subject, e.g. &lt;i&gt;Biology 101&lt;/i&gt;, or it could mean the number of years that the student has been in attendance, e.g. &lt;i&gt;Freshman&lt;/i&gt;. The names suggest that they are subject related, but I don't know this for certain.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;meta_data = pandas.read_csv(metadata_path, sep="\t", 
			    names=["id", "class", "gender"])
meta_data.loc[:, "class"] = meta_data["class"].astype("category")
meta_data.loc[:, "gender"] = meta_data.gender.astype("category")
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(len(meta_data))
print(len(meta_data.id.unique()))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
329
329

&lt;/pre&gt;

&lt;p&gt;
So there's one entry for each student, meaning the student's can't belong to more than one class.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcdc509a" class="outline-4"&gt;
&lt;h4 id="orgcdc509a"&gt;Classes&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgcdc509a"&gt;
&lt;p&gt;
First a table of the counts.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;table = CountPercentage(meta_data["class"]).holoviews_table.opts(
    width=Plot.width,
    height=256,
    fontsize=Plot.fontsize,
)
Embed(plot=table, file_name="class_table", height_in_pixels=270)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/class_table.html" style="width:100%" height="270"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
The fact that there are nine classes makes it seem like it's not likely they are 'classes' in the sense of freshman, sophomores, etc. At the same time, since each student only has one class, it doesn't seem like they are 'classes' in the sense of "Biology 101".
&lt;/p&gt;

&lt;p&gt;
Now a bar-plot to look at how the classes are distributed.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grouped = meta_data.groupby(["class", "gender"]).agg(
    {"class": "count", "gender": "count"})
grouped.columns = ["class_count", "gender_count"]
grouped = grouped.reset_index()
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grouped.loc[:, "class"]= grouped["class"].astype(str)
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar("class", "class_count", title="Class Counts by Gender", 
			  stacked=True,
			  by="gender", height=Plot.height, 
			  width=Plot.width,
			  ylabel="Count",
			  xlabel="Class",
			  tools=["hover"],
			  fontsize=Plot.fontsize).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts_stacked", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/gender_counts_stacked.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/gender_counts_stacked.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
This is a look at the same thing except not stacked.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Class Counts by Gender", x="class", 
			  y="class_count",
			  xlabel="Class",
			  ylabel="Count",
			  by="gender", height=Plot.height, width=Plot.width, 
			  tools=["hover"],
			  fontsize=Plot.fontsize).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/gender_counts.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/gender_counts.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Strangely, the classes that start with &lt;code&gt;2BIO&lt;/code&gt; are more female while the others are more male.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org518e513" class="outline-4"&gt;
&lt;h4 id="org518e513"&gt;Gender&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org518e513"&gt;
&lt;p&gt;
A stacked bar plot to get a sense of not just the distribution among genders but among classes.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
			  stacked=True,
			  by="class", 
			  xlabel="Count",
			  ylabel="Gender",
			  fontsize=Plot.fontsize,
			  width=Plot.width,
			  height=Plot.height).opts(
			      legend_position="top_right",
			      xrotation=90, 
			      xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts_stacked", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/class_counts_stacked.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/class_counts_stacked.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
A non-stacked bar plot to get a better sense of how the genders fill the different classes.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
			  xlabel="Gender",
			  ylabel="Count",
			  by="class", 
			  height=Plot.height,
			  width=Plot.width,
			  fontsize=Plot.fontsize).opts(
			      xrotation=90, xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts", height_in_pixels=Plot.height)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/class_counts.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/class_counts.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
It looks like there were a little more males than females, but not a whole lot more.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org72a4999" class="outline-3"&gt;
&lt;h3 id="org72a4999"&gt;The Friendship Network&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org72a4999"&gt;
&lt;p&gt;
This is a dataset that shows whether a student identified another student as their friend.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;friendship_path = HIGH_SCHOOL.joinpath(Files.friendship)
assert friendship_path.is_file()
with friendship_path.open() as reader:
    for line in range(5):
	print(reader.readline(), end="")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
1 55
1 205
1 272
1 494
1 779

&lt;/pre&gt;

&lt;p&gt;
The first column is the person who reported who his or her friends were and the second column is the person that was identified as a friend.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;friendship_data = pandas.read_csv(friendship_path, delimiter=" ", 
				  names=["reporter", "friend"])
friendship_data = friendship_data.dropna()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org69c5d35" class="outline-3"&gt;
&lt;h3 id="org69c5d35"&gt;Looking at the Friendship Network&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org69c5d35"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;with TIMER:
    friendship_graph = networkx.convert_matrix.from_pandas_edgelist(
	friendship_data, "reporter", "friend", 
	create_using=networkx.DiGraph)
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Started: 2019-04-29 12:04:26.556414
Ended: 2019-04-29 12:04:26.558285
Elapsed: 0:00:00.001871

&lt;/pre&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;genders = dict(zip(meta_data.id, meta_data.gender))
classes = dict(zip(meta_data.id, meta_data["class"]))
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for node in friendship_graph.nodes:
    friendship_graph.nodes[node]["gender"] = genders[node]
    friendship_graph.nodes[node]["class"] = classes[node]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgec87e44" class="outline-3"&gt;
&lt;h3 id="orgec87e44"&gt;Plotting&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgec87e44"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org16029c6" class="outline-4"&gt;
&lt;h4 id="org16029c6"&gt;Friendship Network Circular&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org16029c6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9430dda" class="outline-5"&gt;
&lt;h5 id="org9430dda"&gt;By Gender&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org9430dda"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hover = HoverTool(
    tooltips = [
	("Student Number", "@index"),
	("Gender", "@gender"),
	("Class", "@class"),
    ],
)

plot = holoviews.Graph.from_networkx(friendship_graph,
				     networkx.circular_layout).redim.range(**Plot.padding).options(
					 node_color=dim("gender"), cmap="Set1",
					 tools=[hover, TapTool()],
					 fontsize=Plot.fontsize,
					 width=Plot.graph_width,
					 height=Plot.graph_height,
					 edge_line_color=Plot.edge_color,
					 title="Friendship Network by Gender",
					 xaxis=None,
					 yaxis=None,
					 directed=True)
Embed(plot=plot, file_name="friendship_network_circular")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_circular.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
It's a little hard to see what's going on here, other than to note that you can see some people are more popular than others. The red nodes are male, the green nodes are female, and the blue is "unknown". Strangely, when I did the distributions earlier there were seven "unknown" but there's only one here…
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;print(meta_data[meta_data.gender=="Unknown"])
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
      id  class   gender
320   34     MP  Unknown
321   41     MP  Unknown
322  243     MP  Unknown
323  420     MP  Unknown
324   58    PC*  Unknown
325  209    PC*  Unknown
326  979  2BIO2  Unknown

&lt;/pre&gt;

&lt;p&gt;
There are seven id's, so there are really are seven unknowns, but for some reason the circle graph doesn't expose any other than the first (student 34). Maybe not all the students are in the data?
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;students = set(meta_data.id.unique())
reporters = set(friendship_data.reporter.unique())
print(f"Number of students in the meta-data: {len(students)}")
print(f"Number of students who reported who their friends were: {len(reporters)}")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Number of students in the meta-data: 329
Number of students who reported who their friends were: 133

&lt;/pre&gt;

&lt;p&gt;
So, it looks like not everyone took part in the survey.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;reported = set(friendship_data.friend.unique())
print(f"Students not in graph: {len(students - (reporters &amp;amp; reported))}")
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Students not in graph: 199

&lt;/pre&gt;

&lt;p&gt;
Okay, so not all the students are part of the study.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9dabfaa" class="outline-5"&gt;
&lt;h5 id="org9dabfaa"&gt;By Class&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org9dabfaa"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hover = HoverTool(
    tooltips = [
	 ("Gender", "@gender"),
	 ("Class", "@class"),
    ],
)

plot = holoviews.Graph.from_networkx(friendship_graph,
				     networkx.circular_layout).opts(
					 node_color=dim("class"), cmap="Set1",
					 tools=[hover],
					 fontsize=Plot.fontsize,
					 width=800,
					 height=800,
					 edge_line_color=Plot.edge_color,
					 title="Friendship Network by Class",
					 xaxis=None, yaxis=None, directed=True).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_circular_class")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_circular_class.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_circular_class.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Unfortunately there's a &lt;a href="https://github.com/pyviz/holoviews/issues/3509"&gt;bug&lt;/a&gt; in HoloViews so I can't show a legend with Graphs, but I suppose since I don't know what the classes are, that doesn't really mean anything here.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge7a3ce4" class="outline-4"&gt;
&lt;h4 id="orge7a3ce4"&gt;Spring Layout&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge7a3ce4"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga8f3f1d" class="outline-5"&gt;
&lt;h5 id="orga8f3f1d"&gt;Class&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-orga8f3f1d"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout, ).opts(
    node_color=dim("class"), cmap="Set1",
    tools=["hover"],
    width=800,
    height=800,
    edge_line_color=Plot.edge_color,
    title="Friendship Network By Class",
    xaxis=None, yaxis=None, directed=True,
    legend_position="right"
).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_class_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_class_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_class_spring.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Unlike the circular plot, this plot shows that there are disconnected neighborhoods within the network and there seems to be a clustering by class.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga0784bb" class="outline-5"&gt;
&lt;h5 id="orga0784bb"&gt;Gender&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-orga0784bb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout, ).opts(
					 node_color=dim("gender"), cmap="Set1",
					 tools=["hover"],
					 width=800,
					 height=800,
					 edge_line_color=Plot.edge_color,
					 title="Friendship Network By Gender",
					 xaxis=None, yaxis=None, directed=True).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_gender_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_gender_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_gender_spring.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
Interestingly, this view seems to show that there is also some clustering by gender.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3a5999c" class="outline-4"&gt;
&lt;h4 id="org3a5999c"&gt;Kawada Kamai Layout&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3a5999c"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org201d919" class="outline-5"&gt;
&lt;h5 id="org201d919"&gt;Class&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org201d919"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.kamada_kawai_layout, ).opts(
    node_color=dim("class"), cmap="Set1",
    tools=["hover", TapTool()],
    width=Plot.graph_width,
    height=Plot.graph_height,
    edge_line_color=Plot.edge_color,
    title="Friendship Network By Class (Kamada-Kawai)",
    xaxis=None, yaxis=None, directed=True,
    legend_position="right"
).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_class_kawada_kamai", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_class_kawada_kamai.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_class_spring.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
This has more space between the nodes so it's a little easier to see the groups. Strangely, there's no isolated neighborhoods the way there is with the spring layout.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org669d49a" class="outline-5"&gt;
&lt;h5 id="org669d49a"&gt;Gender&lt;/h5&gt;
&lt;div class="outline-text-5" id="text-org669d49a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.kamada_kawai_layout, ).opts(
					 node_color=dim("gender"), cmap="Set1",
					 tools=["hover"],
					 width=800,
					 height=800,
					 edge_line_color=Plot.edge_color,
					 title="Friendship Network By Gender (Kamada Kawai)",
					 xaxis=None, yaxis=None, directed=True).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_gender_kamada_kawai", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_gender_kamada_kawai.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_gender_spring.html"&gt;Link to Plot&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfd25c03" class="outline-3"&gt;
&lt;h3 id="orgfd25c03"&gt;Degree Distribution&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfd25c03"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org19bcc40" class="outline-4"&gt;
&lt;h4 id="org19bcc40"&gt;Total Degrees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org19bcc40"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;degree_sequence = sorted((degree for node, degree in friendship_graph.degree()))
degree_counts = Counter(degree_sequence)
degrees, counts = zip(*degree_counts.items())
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;table = holoviews.Table({"Degrees": degrees, "Count": counts}, ["Degrees"], ["Count"])
plot = table.to.bars(kdims=["Degrees"], vdims=["Count"]).opts(
    width=Plot.width,
    height=Plot.height,
    fontsize=Plot.fontsize,
    title="Degree Distribution",
    tools=["hover"],
)
Embed(plot=plot, file_name="degree_distribution")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/degree_distribution.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
The &lt;i&gt;Total Degrees&lt;/i&gt; for a node is the number of edges attached to it (either coming in or going out).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5643557" class="outline-4"&gt;
&lt;h4 id="org5643557"&gt;In-Degree Distribution&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org5643557"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;in_degree_sequence = sorted((degree for node, degree in friendship_graph.in_degree))
in_degree_counts = Counter(in_degree_sequence)
in_degrees, in_counts = zip(*in_degree_counts.items())

in_data = pandas.DataFrame.from_dict({"Degrees": in_degrees, "Count": in_counts})
in_data["Direction"] = "in"

plot = in_data.hvplot.bar(x="Degrees", y="Count").opts(
    width=Plot.width,
    height=Plot.height,
    fontsize=Plot.fontsize,
    title="In-Degree Distribution",
    tools=["hover"],
)
Embed(plot=plot, file_name="in_degree_distribution")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/in_degree_distribution.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
The in-degree represents the number of times a student (the node) was identified by someone else as a friend. Three people weren't identified as friends at all and the most common count was 2, although someone was identified 15 times.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfd08408" class="outline-4"&gt;
&lt;h4 id="orgfd08408"&gt;Out-Degree Distribution&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgfd08408"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;out_degree_sequence = sorted((degree for node, degree in friendship_graph.out_degree))
out_degree_counts = Counter(out_degree_sequence)
out_degrees, out_counts = zip(*out_degree_counts.items())

out_data = pandas.DataFrame.from_dict({"Degrees": out_degrees, "Count": out_counts})
out_data["Direction"] = "out"
# table = holoviews.Table(, ["Degrees"], ["Count"])
plot = out_data.hvplot.bar(x="Degrees", y="Count").opts(
    width=Plot.width,
    height=Plot.height,
    fontsize=Plot.fontsize,
    title="Out-Degree Distribution",
    tools=["hover"],
)
Embed(plot=plot, file_name="out_degree_distribution")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/out_degree_distribution.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
The out-degree is the number of other students a student identified as a friend.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org683d85c" class="outline-4"&gt;
&lt;h4 id="org683d85c"&gt;In and Out Degrees&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org683d85c"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;in_out = pandas.concat([in_data, 
			out_data]).sort_values(by="Degrees")
plot = in_out.hvplot.bar(x="Degrees", y="Count", by="Direction").opts(
    width=Plot.width,
    height=Plot.height,
    fontsize=Plot.fontsize,
    title="In and Out-Degree Distribution",
    tools=["hover"],
)
Embed(plot=plot, file_name="in_and_out_degree_distribution")()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/in_and_out_degree_distribution.html" style="width:100%" height="800"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
Despite the fact that I sorted the data by degrees, the actual plot seems to have also sort it by degrees but treating them as strings instead of integers. I'm going to add the in-degree, out-degree and in-degree - out-degree (in minus out) as data for the nodes so that they'll be available in the plots.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for node in friendship_graph.nodes:
    friendship_graph.nodes[node]["In-Degree"] = friendship_graph.in_degree[node]
    friendship_graph.nodes[node]["Out-Degree"] = friendship_graph.out_degree[node]
    friendship_graph.nodes[node]["In-Out"] = friendship_graph.in_degree[node] - friendship_graph.out_degree[node]
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Bokeh seemed to indicate that you could set the thickness of the edges using weights, but this doesn't seem to work, HoloViews appears to have changed something and I couldn't figure out how to make it work.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;for start, end in friendship_graph.edges:
    friendship_graph[start][end]["in_weight"] = friendship_graph.in_degree[end]
    friendship_graph[start][end]["out_weight"] = friendship_graph.out_degree[start]
    friendship_graph[start][end]["weight"] = friendship_graph.in_degree[end]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgecbe51c" class="outline-4"&gt;
&lt;h4 id="orgecbe51c"&gt;Popularity&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgecbe51c"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout)
plot = plot.opts(
    node_color=dim("In-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="In-Degree",
    edge_cmap="Spectral",
    title="Friendship Network In-Degree",
    xaxis=None, yaxis=None, directed=True).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_in_degree_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_in_degree_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
The color of the nodes is related to the number of in-degrees it has (which represents the number of other students that stated a node was their friend). If it is dark purple then there are fewer in-degrees. If it is yellow than there are many in-degrees. So the yellow nodes are popular and the dark purple nodes not so much.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = bundle_graph(holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout))
plot = plot.opts(
    node_color=dim("In-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="In-Degree",
    edge_cmap="Spectral",
    title="Friendship Network In-Degree",
    xaxis=None, yaxis=None, directed=True).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_in_degree_bundled_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_in_degree_bundled_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.circular_layout)
plot = plot.opts(
    node_color=dim("In-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="In-Degree",
    edge_cmap="Spectral",
    title="Friendship Network In-Degree",
    xaxis=None, yaxis=None, directed=True).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_in_degree_circular", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_in_degree_circular.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = bundle_graph(holoviews.Graph.from_networkx(friendship_graph, networkx.circular_layout))
plot = plot.opts(
    node_color=dim("In-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="In-Degree",
    edge_cmap="Spectral",
    title="Friendship Network In-Degree",
    directed=True).redim.range(**Plot.padding)
Embed(plot=plot, file_name="friendship_network_in_degree_bundled_circular", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_in_degree_bundled_circular.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = bundle_graph(holoviews.Graph.from_networkx(friendship_graph, networkx.kamada_kawai_layout))
plot = plot.opts(
    node_color=dim("In-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="In-Degree",
    edge_cmap="Spectral",
    title="Friendship Network In-Degree (Kamada-Kawai)",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_in_degree_bundled_kamada_kawai", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_in_degree_bundled_kamada_kawai.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6374e41" class="outline-4"&gt;
&lt;h4 id="org6374e41"&gt;Gregariousness&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org6374e41"&gt;
&lt;p&gt;
The out-degree is the number of times a student identified other students as friends. I'll interpret this as gregariousness (or maybe neediness).
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout)
plot = plot.opts(
    node_color=dim("Out-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network Out-Degree",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_out_degree_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_out_degree_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
The color of the nodes is related to the number of out-degrees it has (which represents the number of students that a stated node identified as their friend). If it is dark purple than there are fewer out-degrees (loners?). If it is yellow than there are many out-degrees (the consider many to be their friends).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = bundle_graph(holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout))
plot = plot.opts(
    node_color=dim("Out-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network Out-Degree",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_out_degree_bundled_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_out_degree_bundled_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.circular_layout)
plot = plot.opts(
    node_color=dim("Out-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_alpha=0.25,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network Out-Degree",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_out_degree_circular", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_out_degree_circular.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = bundle_graph(holoviews.Graph.from_networkx(friendship_graph, networkx.circular_layout))
plot = plot.opts(
    node_color=dim("Out-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network Out-Degree",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_out_degree_bundled_circular", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_out_degree_bundled_circular.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = bundle_graph(holoviews.Graph.from_networkx(friendship_graph, networkx.kamada_kawai_layout))
plot = plot.opts(
    node_color=dim("Out-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network Out-Degree (Kamada-Kawai)",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_out_degree_bundled_kamada_kawai", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_out_degree_bundled_kamada_kawai.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.kamada_kawai_layout)
plot = plot.opts(
    node_color=dim("Out-Degree"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network Out-Degree (Kamada-Kawai)",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_out_degree_unbundled_kamada_kawai", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_out_degree_unbundled_kamada_kawai.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org30a5084" class="outline-4"&gt;
&lt;h4 id="org30a5084"&gt;Perception&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org30a5084"&gt;
&lt;p&gt;
The &lt;i&gt;In Degree - Out Degree&lt;/i&gt; tells us how a student's perception of how many friends she has compares to how many people really think she's their friend. If it's negative than she thinks she has more friends than she has (delusional? optimistic?) and if it's positive than she has more friends than she thinks she does (modest? low self-esteem?).
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout)
plot = plot.opts(
    node_color=dim("In-Out"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network In Degree - Out Degree",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_in_minus_out_spring", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_in_minus_out_spring.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;

&lt;p&gt;
The dark-purple nodes have the most out-degrees compared to their in-degrees and the yellow-nodes have the most in-degrees compared to out-degrees.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plot = holoviews.Graph.from_networkx(friendship_graph, networkx.kamada_kawai_layout)
plot = plot.opts(
    node_color=dim("In-Out"), cmap="Plasma",
    tools=["hover"],
    width=800,
    height=800,
    edge_color_index="Out-Degree",
    edge_cmap="Spectral",
    title="Friendship Network In Minus Out (Kamada-Kawai)",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_in_minus_out_kamada_kawac", height_in_pixels=810)()
&lt;/pre&gt;&lt;/div&gt;

&lt;object type="text/html" data="https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/friendship_network_in_minus_out_kamada_kawac.html" style="width:100%" height="810"&gt;
  &lt;p&gt;Figure Missing&lt;/p&gt;
&lt;/object&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9c1a4d3" class="outline-2"&gt;
&lt;h2 id="org9c1a4d3"&gt;The Return&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9c1a4d3"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgfd80b1d" class="outline-3"&gt;
&lt;h3 id="orgfd80b1d"&gt;Citations&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgfd80b1d"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;R. Mastrandrea, J. Fournet, A. Barrat,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Contact patterns in a high school: a comparison between data collected using wearable sensors, contact diaries and friendship surveys.
PLoS ONE 10(9): e0136497 (2015)
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>exploration</category><category>networks</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/networks/high-school-friendship-networks/</guid><pubDate>Mon, 25 Mar 2019 00:38:17 GMT</pubDate></item><item><title>Customizing HoloViews</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#org6fbd883"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#orgd43bcd2"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#org97d74f0"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#org68a00f3"&gt;The Timer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#org0605bd0"&gt;The Embedder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#orgdf3311f"&gt;Bokeh Backend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#orgccabf96"&gt;The Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#orgbf65b91"&gt;Plot time vs Latitude.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/#org5348c25"&gt;Take Two&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org6fbd883" class="outline-2"&gt;
&lt;h2 id="org6fbd883"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6fbd883"&gt;
&lt;p&gt;
This is another exploration - this time looking at what they call &lt;a href="http://holoviews.org/getting_started/Customization.html"&gt;Customization&lt;/a&gt;. In my introduction post when I made a scatter plot with a hover tool I first had to make the Scatter element and then add the hover tool as part of the options. HoloViews does this to try and emphasize a separation of content and presentation. When making the Scatter element I was supposed to only be thinking about the data that I wanted to add, then when working with the options I was turning to focus on the aesthetics.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd43bcd2" class="outline-2"&gt;
&lt;h2 id="orgd43bcd2"&gt;Set Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd43bcd2"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org97d74f0" class="outline-3"&gt;
&lt;h3 id="org97d74f0"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org97d74f0"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1152af0" class="outline-4"&gt;
&lt;h4 id="org1152af0"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1152af0"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org083977f" class="outline-4"&gt;
&lt;h4 id="org083977f"&gt;PyPi&lt;/h4&gt;
&lt;/div&gt;
&lt;div id="outline-container-org04ba6b6" class="outline-4"&gt;
&lt;h4 id="org04ba6b6"&gt;Related Projects&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org04ba6b6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;neurotic.tangles.timer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3b2f206" class="outline-4"&gt;
&lt;h4 id="org3b2f206"&gt;This Project&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3b2f206"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bartleby_the_penguin.tangles.embed_bokeh&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org68a00f3" class="outline-3"&gt;
&lt;h3 id="org68a00f3"&gt;The Timer&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org68a00f3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TIMER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0605bd0" class="outline-3"&gt;
&lt;h3 id="org0605bd0"&gt;The Embedder&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0605bd0"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;files_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"../../files/posts/libraries/customizing-holoviews/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Embed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;folder_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;files_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdf3311f" class="outline-3"&gt;
&lt;h3 id="orgdf3311f"&gt;Bokeh Backend&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdf3311f"&gt;
&lt;p&gt;
When I ran the code further down in the notebook to render the javascript I was getting this error:
&lt;/p&gt;

&lt;pre class="example"&gt;
ValueError: autoload_static expects a single Model or Document
&lt;/pre&gt;

&lt;p&gt;
It was because I forgot the next step and it was defaulting to Matplotlib for some reason.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bokeh"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgccabf96" class="outline-2"&gt;
&lt;h2 id="orgccabf96"&gt;The Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgccabf96"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;".env"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"PORTLAND_CRIME"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;TIMER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Started: 2019-03-02 14:25:02.818262
Ended: 2019-03-02 14:25:03.296873
Elapsed: 0:00:00.478611

&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
RangeIndex: 217224 entries, 0 to 217223
Data columns (total 17 columns):
Address              196626 non-null object
Case Number          217224 non-null object
Crime Against        217224 non-null object
Neighborhood         210788 non-null object
Number of Records    217224 non-null int64
Occur Month Year     217224 non-null object
Occur Date           217224 non-null object
Occur Time           217224 non-null int64
Offense Category     217224 non-null object
Offense Count        217224 non-null int64
Offense Type         217224 non-null object
OpenDataLat          193352 non-null float64
OpenDataLon          193352 non-null float64
OpenDataX            193352 non-null float64
OpenDataY            193352 non-null float64
Report Date          217224 non-null object
ReportMonthYear      217224 non-null object
dtypes: float64(4), int64(3), object(10)
memory usage: 28.2+ MB
None
&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Occur Date"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
	&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt;
	&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Occur Time"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zfill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"%m/&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;/%Y %H%M"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
0   2017-08-26 00:00:00
1   2017-08-29 16:00:00
2   2017-08-12 19:00:00
3   2017-08-27 01:00:00
4   2017-07-24 09:03:00
Name: date, dtype: datetime64[ns]

&lt;/pre&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	    &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;selection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgbf65b91" class="outline-3"&gt;
&lt;h3 id="orgbf65b91"&gt;Plot time vs Latitude.&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbf65b91"&gt;
&lt;p&gt;
First we get our content.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;curve&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Curve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Date-Time"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"OpenDataLat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Latitude"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;timestamps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spikes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Date-Time"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curve&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timestamps&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now we make our presentation.
&lt;/p&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/latitude_time_1.js" id="8fa0ac45-95db-4c26-8468-94bf70e3c9a5"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org5348c25" class="outline-3"&gt;
&lt;h3 id="org5348c25"&gt;Take Two&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5348c25"&gt;
&lt;p&gt;
Although the defaults give us a plot that's hard to read, by adjusting the width of the plot we can make it something more interpretable.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Curve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xaxis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"red"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"hover"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spikes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xaxis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"grey"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/latitude_time_2.js" id="9453cc0e-bdec-4716-874a-a8d149b9e6dd"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>exploration</category><category>holoviews</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/customizing-holoviews/</guid><pubDate>Sun, 03 Feb 2019 01:07:31 GMT</pubDate></item><item><title>HoloViews Introduction</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#orgffe922c"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#orgabb996c"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#orge49c89e"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#org684f94e"&gt;This Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#orga1b7724"&gt;The HoloViews Backend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#orgc33b03c"&gt;A Partial Bokeh Embedder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#orga4f5a93"&gt;The Data Set&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#orga0e934b"&gt;Load It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#org587e328"&gt;Make The DataFrame&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#org182253c"&gt;A Plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/#org9a73ccf"&gt;Adding To the Layout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgffe922c" class="outline-2"&gt;
&lt;h2 id="orgffe922c"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgffe922c"&gt;
&lt;p&gt;
I've already taken an initial look at HVPlot so I'm going to look at &lt;a href="http://holoviews.org/"&gt;HoloViews&lt;/a&gt; which acts as an intermediate layer between the main plotting libraries like bokeh and matplotlib and the upper layer given by HVPlot. I haven't used it before so I'm not really sure when you would use what. I guess &lt;code&gt;HVPlot&lt;/code&gt; gives you access to the &lt;code&gt;pandas&lt;/code&gt; plots in bokeh without a lot of work, which is nice, although I noticed that the plots tended to be missing things sometimes (like the Hover tool) so if you want to add more back in you probably have to understand &lt;code&gt;HoloViews&lt;/code&gt; which itself sometimes doesn't give you what you want (like the ability to render it in org-mode posts) so you still need bokeh too, sometimes. And of course I'm only using the static-page versions of everything, not the features that work with a bokeh or jupyter server. But I guess that's for later.
&lt;/p&gt;

&lt;p&gt;
I'm going to be working from the &lt;a href="http://holoviews.org/getting_started/Introduction.html"&gt;Introduction&lt;/a&gt; of their Getting Started guide.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgabb996c" class="outline-2"&gt;
&lt;h2 id="orgabb996c"&gt;Set Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgabb996c"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge49c89e" class="outline-3"&gt;
&lt;h3 id="orge49c89e"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge49c89e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org57a8f01" class="outline-4"&gt;
&lt;h4 id="org57a8f01"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org57a8f01"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgdd59e7b" class="outline-4"&gt;
&lt;h4 id="orgdd59e7b"&gt;From PiPy&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgdd59e7b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;holoviews&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.datasets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fetch_california_housing&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;holoviews&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org684f94e" class="outline-3"&gt;
&lt;h3 id="org684f94e"&gt;This Project&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org684f94e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bartleby_the_penguin.tangles.embed_bokeh&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga1b7724" class="outline-3"&gt;
&lt;h3 id="orga1b7724"&gt;The HoloViews Backend&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga1b7724"&gt;
&lt;p&gt;
If you use &lt;code&gt;HVPlot&lt;/code&gt; you don't need to set the backend (because it defaults to 'bokeh', I think) but this is going to be about &lt;code&gt;HoloViews&lt;/code&gt; so I'm going to do it their way, rather than relying on all the &lt;code&gt;pandas&lt;/code&gt; methods.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"bokeh"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc33b03c" class="outline-3"&gt;
&lt;h3 id="orgc33b03c"&gt;A Partial Bokeh Embedder&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc33b03c"&gt;
&lt;p&gt;
Since the output folder is always the same I'm going to bind it to the EmbedBokeh definition.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plot_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"../../files/posts/libraries/holoviews-introduction/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Embed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;folder_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;plot_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga4f5a93" class="outline-2"&gt;
&lt;h2 id="orga4f5a93"&gt;The Data Set&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga4f5a93"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga0e934b" class="outline-3"&gt;
&lt;h3 id="orga0e934b"&gt;Load It&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga0e934b"&gt;
&lt;p&gt;
Sklearn downloads it as a 'bunch' so we need to get it in that form first and then turn it into a data frame (I'm sure there's a way to skip this step but this is the way I already know how to do it).
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"~/data/datasets/california-housing"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_dir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bunch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fetch_california_housing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bunch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DESCR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
/home/hades/data/datasets/california-housing
.. _california_housing_dataset:

California Housing dataset
--------------------------

**Data Set Characteristics:**

    :Number of Instances: 20640

    :Number of Attributes: 8 numeric, predictive attributes and the target

    :Attribute Information:
        - MedInc        median income in block
        - HouseAge      median house age in block
        - AveRooms      average number of rooms
        - AveBedrms     average number of bedrooms
        - Population    block population
        - AveOccup      average house occupancy
        - Latitude      house block latitude
        - Longitude     house block longitude

    :Missing Attribute Values: None

This dataset was obtained from the StatLib repository.
http://lib.stat.cmu.edu/datasets/

The target variable is the median house value for California districts.

This dataset was derived from the 1990 U.S. census, using one row per census
block group. A block group is the smallest geographical unit for which the U.S.
Census Bureau publishes sample data (a block group typically has a population
of 600 to 3,000 people).

It can be downloaded/loaded using the
:func:`sklearn.datasets.fetch_california_housing` function.

.. topic:: References

    - Pace, R. Kelley and Ronald Barry, Sparse Spatial Autoregressions,
      Statistics and Probability Letters, 33 (1997) 291-297
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org587e328" class="outline-3"&gt;
&lt;h3 id="org587e328"&gt;Make The DataFrame&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org587e328"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bunch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bunch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feature_names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"median_value"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bunch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
   MedInc  HouseAge  AveRooms  AveBedrms  Population  AveOccup  Latitude  \
0  8.3252      41.0  6.984127   1.023810       322.0  2.555556     37.88   
1  8.3014      21.0  6.238137   0.971880      2401.0  2.109842     37.86   
2  7.2574      52.0  8.288136   1.073446       496.0  2.802260     37.85   
3  5.6431      52.0  5.817352   1.073059       558.0  2.547945     37.85   
4  3.8462      52.0  6.281853   1.081081       565.0  2.181467     37.85   

   Longitude  median_value  
0    -122.23         4.526  
1    -122.22         3.585  
2    -122.24         3.521  
3    -122.25         3.413  
4    -122.25         3.422  
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org182253c" class="outline-2"&gt;
&lt;h2 id="org182253c"&gt;A Plot&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org182253c"&gt;
&lt;p&gt;
Our target is the median value of the house. Does that correlate with median income?
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
			    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"MedInc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Median Income"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
			    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"median_value"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Median Value"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
			    &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"California Housing"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
After setting up the basic plot we can do things to affect the appearance like setting the color or adding tools.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"red"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"hover"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/income_vs_value.js" id="bfbe3866-7981-492f-b2f8-918396abac02"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9a73ccf" class="outline-2"&gt;
&lt;h2 id="org9a73ccf"&gt;Adding To the Layout&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9a73ccf"&gt;
&lt;p&gt;
What if we want to add a distrbution to the plot? HoloViews uses the &lt;code&gt;+&lt;/code&gt; operator to indicate that you want to append a plot to another one.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scatter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HouseAge&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;kdims&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"HouseAge"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"hover"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/income_vs_value_with_house_age.js" id="728203cb-7d9b-4ecd-aeb0-a30aec6a7655"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>exploration</category><category>holoviews</category><category>visualization</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/holoviews-introduction/</guid><pubDate>Sat, 02 Feb 2019 22:15:01 GMT</pubDate></item><item><title>A First Look At HVPlot</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org3e0be06"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org0fdcfe5"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgf94f0ed"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org9669b88"&gt;Typing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgaa473b6"&gt;Constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org7cb3681"&gt;Tables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org313fa3e"&gt;Helpers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgc50f050"&gt;EmbedBokeh Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orge98e47f"&gt;The Timer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org3d376a5"&gt;The Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgb6217b3"&gt;Portland Crime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org7417596"&gt;Making the Plot&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgb0e0b51"&gt;The Plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org57ddcda"&gt;Trimmed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgcbeb49b"&gt;By Type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgd1ca0df"&gt;Looking a Little More at the Crimes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#orgc5a4007"&gt;By Neighborhood&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org752bfe8"&gt;Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org5c85e60"&gt;Irises&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org7096eb4"&gt;Scatter Matrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/#org1e1c40b"&gt;Parallel Coordinates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3e0be06" class="outline-2"&gt;
&lt;h2 id="org3e0be06"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3e0be06"&gt;
&lt;p&gt;
This is a look at &lt;a href="https://hvplot.pyviz.org/"&gt;HVPlot&lt;/a&gt;, a &lt;a href="http://holoviews.org/"&gt;HoloViews&lt;/a&gt; based plotting adapter that works directly with &lt;a href="https://pandas.pydata.org/"&gt;pandas&lt;/a&gt; or other pandas-like libraries (e.g. &lt;a href="https://dask.org/"&gt;dask&lt;/a&gt;). I'm starting with their &lt;a href="https://hvplot.pyviz.org/user_guide/Introduction.html"&gt;Introduction&lt;/a&gt; but might branch out after that. We'll see.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0fdcfe5" class="outline-2"&gt;
&lt;h2 id="org0fdcfe5"&gt;Set Up&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org0fdcfe5"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgf94f0ed" class="outline-3"&gt;
&lt;h3 id="orgf94f0ed"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf94f0ed"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1ab1482" class="outline-4"&gt;
&lt;h4 id="org1ab1482"&gt;From Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1ab1482"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;textwrap&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7a33a7b" class="outline-4"&gt;
&lt;h4 id="org7a33a7b"&gt;From PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7a33a7b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.datasets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_iris&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tabulate&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tabulate&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org9fc73ca" class="outline-4"&gt;
&lt;h4 id="org9fc73ca"&gt;My Stuff&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9fc73ca"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;neurotic.tangles.timer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgebcdf12" class="outline-4"&gt;
&lt;h4 id="orgebcdf12"&gt;The Bokeh Imports&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgebcdf12"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.embed&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;autoload_static&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;bokeh.resources&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9e6b310" class="outline-4"&gt;
&lt;h4 id="org9e6b310"&gt;Set Up the HVPlot&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org9e6b310"&gt;
&lt;p&gt;
I'm not sure exactly what it's doing, but this next import adds an &lt;code&gt;hvplot&lt;/code&gt; method to pandas' DataFrames to do the actual plotting.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;holoviews&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hvplot.pandas&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9669b88" class="outline-3"&gt;
&lt;h3 id="org9669b88"&gt;Typing&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9669b88"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PathType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgaa473b6" class="outline-3"&gt;
&lt;h3 id="orgaa473b6"&gt;Constants&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgaa473b6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;FOLDER_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"../files/posts/libraries/a-first-look-at-hvplot/"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7cb3681" class="outline-3"&gt;
&lt;h3 id="org7cb3681"&gt;Tables&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7cb3681"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tabulate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tablefmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"orgtbl"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"keys"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;showindex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org313fa3e" class="outline-2"&gt;
&lt;h2 id="org313fa3e"&gt;Helpers&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org313fa3e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc50f050" class="outline-3"&gt;
&lt;h3 id="orgc50f050"&gt;EmbedBokeh Class&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc50f050"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EmbedBokeh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="sd"&gt;"""Embed a bokeh figure&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;     plot: a hvplot to embed&lt;/span&gt;
&lt;span class="sd"&gt;     folder_path: path to the folder to save the file&lt;/span&gt;
&lt;span class="sd"&gt;     file_name: name of the file to save the javascript in&lt;/span&gt;
&lt;span class="sd"&gt;     create_folder: if the folder doesn't exist create it&lt;/span&gt;
&lt;span class="sd"&gt;     make_parents: if creating a folder add the missing folders in the path&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;overlay&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NdOverlay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		 &lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		 &lt;span class="n"&gt;folder_path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PathType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		 &lt;span class="n"&gt;create_folder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		 &lt;span class="n"&gt;make_parents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_figure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_folder&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_parents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_parents&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_folder_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;folder_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;folder_path&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_javascript&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_bokeh_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_export_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;folder_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""The path to the folder to store javascript"""&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_folder_path&lt;/span&gt;

    &lt;span class="nd"&gt;@folder_path.setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;folder_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PathType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""Sets the path to the javascript folder"""&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_folder_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_folder&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt;  &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_folder_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_dir&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
	    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_folder_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_parents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""The name of the javascript file"""&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_file_name&lt;/span&gt;

    &lt;span class="nd"&gt;@file_name.setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""Sets the filename&lt;/span&gt;

&lt;span class="sd"&gt;	Args:&lt;/span&gt;
&lt;span class="sd"&gt;	 name: name to save the javascript (without the folder)&lt;/span&gt;
&lt;span class="sd"&gt;	"""&lt;/span&gt;
	&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"{}.js"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;bokeh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Figure&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""The Figure to plot"""&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_figure&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_figure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;holoviews&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_figure&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;bokeh_source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;bokeh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resources&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""The javascript source&lt;/span&gt;
&lt;span class="sd"&gt;	"""&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_bokeh_source&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_bokeh_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bokeh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resources&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CDN&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_bokeh_source&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""The HTML fragment to export"""&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_javascript&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;autoload_static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
							     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bokeh_source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
							     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;javascript&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""javascript to save"""&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_javascript&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_javascript&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;autoload_static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
							     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bokeh_source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
							     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_javascript&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;export_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""The string to embed the figure into org-mode"""&lt;/span&gt;
	&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_export_string&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_export_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;textwrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dedent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
		&lt;span class="sd"&gt;"""#+BEGIN_EXPORT html{}&lt;/span&gt;
&lt;span class="sd"&gt;#+END_EXPORT"""&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_export_string&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""Saves the javascript file"""&lt;/span&gt;
	&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;folder_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;joinpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	    &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;javascript&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""Creates the bokeh javascript and emits it"""&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
	&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;export_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
	&lt;span class="sd"&gt;"""Sets the generated (bokeh) properties back to None"""&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_export_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_javascript&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_figure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
	&lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;folder_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FOLDER_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge98e47f" class="outline-3"&gt;
&lt;h3 id="orge98e47f"&gt;The Timer&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge98e47f"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TIMER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3d376a5" class="outline-2"&gt;
&lt;h2 id="org3d376a5"&gt;The Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3d376a5"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb6217b3" class="outline-3"&gt;
&lt;h3 id="orgb6217b3"&gt;Portland Crime&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb6217b3"&gt;
&lt;p&gt;
This is taken from the &lt;a href="https://www.portlandoregon.gov/police/71978"&gt;Portland Crime Statistics&lt;/a&gt; page.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;portland_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"~/data/datasets/portland/crime-to-january-2018.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expanduser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;portland_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_file&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;TIMER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;crime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;portland_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Started: 2019-02-02 18:38:59.025251
Ended: 2019-02-02 18:39:00.170796
Elapsed: 0:00:01.145545

&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
RangeIndex: 217224 entries, 0 to 217223
Data columns (total 17 columns):
Address              196626 non-null object
Case Number          217224 non-null object
Crime Against        217224 non-null object
Neighborhood         210788 non-null object
Number of Records    217224 non-null int64
Occur Month Year     217224 non-null object
Occur Date           217224 non-null object
Occur Time           217224 non-null int64
Offense Category     217224 non-null object
Offense Count        217224 non-null int64
Offense Type         217224 non-null object
OpenDataLat          193352 non-null float64
OpenDataLon          193352 non-null float64
OpenDataX            193352 non-null float64
OpenDataY            193352 non-null float64
Report Date          217224 non-null object
ReportMonthYear      217224 non-null object
dtypes: float64(4), int64(3), object(10)
memory usage: 28.2+ MB
None
&lt;/pre&gt;

&lt;p&gt;
Here's a possible categorical column to use.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Crime Against"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"category"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;crime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Crime Against"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Type"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Count"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Type&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Property&lt;/td&gt;
&lt;td class="org-right"&gt;175567&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Person&lt;/td&gt;
&lt;td class="org-right"&gt;32109&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Society&lt;/td&gt;
&lt;td class="org-right"&gt;9548&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7417596" class="outline-2"&gt;
&lt;h2 id="org7417596"&gt;Making the Plot&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7417596"&gt;
&lt;p&gt;
Holoviews is expecting you to work in a &lt;a href="https://jupyter.org/"&gt;jupyter notebook&lt;/a&gt; and isn't quite so easy to work with in org-mode so I'll make the plot with &lt;code&gt;hvplot&lt;/code&gt; but then convert it to a &lt;a href="https://bokeh.pydata.org/en/latest/docs/reference/plotting.html"&gt;bokeh figure&lt;/a&gt; to embed it in this post.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb0e0b51" class="outline-3"&gt;
&lt;h3 id="orgb0e0b51"&gt;The Plot&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb0e0b51"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;TIMER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Occur Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Case Number"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;crime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Occur Date"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Case Number"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;crime_dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Started: 2019-02-01 20:31:47.668915
Ended: 2019-02-01 20:32:09.889378
Elapsed: 0:00:22.220463

&lt;/pre&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;weekly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"W"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;weekly&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"weekly_crime.js"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/weekly_crime.js" id="772db8e1-1a48-4157-9c71-2cdeba64b4cc"&gt;&lt;/script&gt;

&lt;p&gt;
That didn't work out is planned. It turns out that the data starts in 1972, but is mostly empty until around May of 2015. It also looks like January is missing values. I think I'll trim the data set.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org57ddcda" class="outline-3"&gt;
&lt;h3 id="org57ddcda"&gt;Trimmed&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org57ddcda"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;crime_dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
			  &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="n"&gt;weekly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"W"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/weekly_trimmed_crime.js" id="36bd73d0-3379-4f11-8490-89e0572a7ade"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcbeb49b" class="outline-2"&gt;
&lt;h2 id="orgcbeb49b"&gt;By Type&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcbeb49b"&gt;
&lt;p&gt;
HoloViews uses this rather odd way of composing figures. Instead of the object-oriented way you might expect it overrides the multiplication sign (&lt;code&gt;*&lt;/code&gt; for adding to the same plot) and addition sign (&lt;code&gt;+&lt;/code&gt; for adding an adjacent plot) so to plot the types I'll have to multiply their plots.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
	 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
&lt;span class="n"&gt;weekly_types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"W"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
		&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
&lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weekly_types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;weekly_types&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
    &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;weekly_types&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/weekly_crime_by_type.js" id="ab8f8249-d8a5-4af3-ab7b-7b84af3d7a31"&gt;&lt;/script&gt;

&lt;p&gt;
It looks like it could use more trimming, but it also looks like it's mostly property crimes, which is what you'd expect, I guess. Actually I tried another trim and it looks like it always starts at zero because of the way the resampling works, so trimming doesn't make that first anomaly go away. Maybe trimming the weekly would help.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd1ca0df" class="outline-2"&gt;
&lt;h2 id="orgd1ca0df"&gt;Looking a Little More at the Crimes&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd1ca0df"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc5a4007" class="outline-3"&gt;
&lt;h3 id="orgc5a4007"&gt;By Neighborhood&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc5a4007"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;top_ten&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Neighborhood&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()[:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_ten&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Neighborhood Count"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Neighborhood&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;Downtown&lt;/td&gt;
&lt;td class="org-right"&gt;10237&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Hazelwood&lt;/td&gt;
&lt;td class="org-right"&gt;10127&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Lents&lt;/td&gt;
&lt;td class="org-right"&gt;5681&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Powellhurst-Gilbert&lt;/td&gt;
&lt;td class="org-right"&gt;5605&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Centennial&lt;/td&gt;
&lt;td class="org-right"&gt;5016&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Old Town/Chinatown&lt;/td&gt;
&lt;td class="org-right"&gt;4966&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Northwest&lt;/td&gt;
&lt;td class="org-right"&gt;4648&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Montavilla&lt;/td&gt;
&lt;td class="org-right"&gt;4026&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Pearl&lt;/td&gt;
&lt;td class="org-right"&gt;3905&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;Lloyd&lt;/td&gt;
&lt;td class="org-right"&gt;3699&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;neighborhoods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crime_dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Neighborhood"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;neighborhoods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_dummies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;neighborhoods&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;neighborhoods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;neighborhoods&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;top_ten&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"index"&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"M"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;neighborhoods&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Top Ten Monthly Neighborhood Crime Counts"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;neighborhoods&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Downtown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Hazelwood"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
					      &lt;span class="s2"&gt;"Lents"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Powellhurst-Gilbert"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"neighborhoods"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/neighborhoods.js" id="83cc6d7d-3efe-4dc0-9765-6ab52eaedba7"&gt;&lt;/script&gt;

&lt;p&gt;
So the first thing to notice is that Downtown and Hazelwood dominate the case counts. There doesn't seem to be any strong upward or downward trend.
&lt;/p&gt;

&lt;p&gt;
I live in Powelhurst-Gilbert, about a block north of Lents, and it looks like if you considered them one big neighborhood (they are adjacent), then they form the highest-crime Neighborhood, but, sticking to the arbitrariness of the boundaries, we are relegated to numbers three and four.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org752bfe8" class="outline-2"&gt;
&lt;h2 id="org752bfe8"&gt;Distribution&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org752bfe8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;neighborhoods&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;kde&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Neighborhood"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Distributions of Top Ten Crime Neighborhoods"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"neighborhoods_kde"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/neighborhoods_kde.js" id="f36dff14-b71a-4865-a1aa-7d9a69455ee1"&gt;&lt;/script&gt;

&lt;p&gt;
I don't know what that mysterious bulge around zero is, all the neighborhoods are in the other peaks.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5c85e60" class="outline-2"&gt;
&lt;h2 id="org5c85e60"&gt;Irises&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5c85e60"&gt;
&lt;p&gt;
Since the previous data was time-series data I thought I'd load a data set that wasn't to illustrate the use of the &lt;code&gt;by&lt;/code&gt; parameter.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irises&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_iris&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irises&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DESCR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
.. _iris_dataset:

Iris plants dataset
--------------------

**Data Set Characteristics:**

    :Number of Instances: 150 (50 in each of three classes)
    :Number of Attributes: 4 numeric, predictive attributes and the class
    :Attribute Information:
        - sepal length in cm
        - sepal width in cm
        - petal length in cm
        - petal width in cm
        - class:
                - Iris-Setosa
                - Iris-Versicolour
                - Iris-Virginica
                
    :Summary Statistics:

    ============== ==== ==== ======= ===== ====================
                    Min  Max   Mean    SD   Class Correlation
    ============== ==== ==== ======= ===== ====================
    sepal length:   4.3  7.9   5.84   0.83    0.7826
    sepal width:    2.0  4.4   3.05   0.43   -0.4194
    petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)
    petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)
    ============== ==== ==== ======= ===== ====================

    :Missing Attribute Values: None
    :Class Distribution: 33.3% for each of 3 classes.
    :Creator: R.A. Fisher
    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)
    :Date: July, 1988

The famous Iris database, first used by Sir R.A. Fisher. The dataset is taken
from Fisher's paper. Note that it's the same as in R, but not as in the UCI
Machine Learning Repository, which has two wrong data points.

This is perhaps the best known database to be found in the
pattern recognition literature.  Fisher's paper is a classic in the field and
is referenced frequently to this day.  (See Duda &amp;amp; Hart, for example.)  The
data set contains 3 classes of 50 instances each, where each class refers to a
type of iris plant.  One class is linearly separable from the other 2; the
latter are NOT linearly separable from each other.

.. topic:: References

   - Fisher, R.A. "The use of multiple measurements in taxonomic problems"
     Annual Eugenics, 7, Part II, 179-188 (1936); also in "Contributions to
     Mathematical Statistics" (John Wiley, NY, 1950).
   - Duda, R.O., &amp;amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis.
     (Q327.D83) John Wiley &amp;amp; Sons.  ISBN 0-471-22361-1.  See page 218.
   - Dasarathy, B.V. (1980) "Nosing Around the Neighborhood: A New System
     Structure and Classification Rule for Recognition in Partially Exposed
     Environments".  IEEE Transactions on Pattern Analysis and Machine
     Intelligence, Vol. PAMI-2, No. 1, 67-71.
   - Gates, G.W. (1972) "The Reduced Nearest Neighbor Rule".  IEEE Transactions
     on Information Theory, May 1972, 431-433.
   - See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al"s AUTOCLASS II
     conceptual clustering system finds 3 classes in the data.
   - Many, many more ...
&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;iris_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irises&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;irises&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feature_names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
   sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)
0                5.1               3.5                1.4               0.2
1                4.9               3.0                1.4               0.2
2                4.7               3.2                1.3               0.2
3                4.6               3.1                1.5               0.2
4                5.0               3.6                1.4               0.2

&lt;/pre&gt;

&lt;p&gt;
I don't know where this convention came from, but you can use the &lt;code&gt;by&lt;/code&gt; keyword to specify a categorical column to differentiate the data points. In this case I'll use it to differentiate the species.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irises&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;target_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;irises&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target_names&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;iris_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"target"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;target_map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"sepal length (cm)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"petal length (cm)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
				&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"target"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
				&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Iris Sepal Length vs Petal Length"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;EmbedBokeh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;folder_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FOLDER_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"irises.js"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/irises.js" id="410280c0-48c7-445f-9e4c-001a2b350d06"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7096eb4" class="outline-3"&gt;
&lt;h3 id="org7096eb4"&gt;Scatter Matrix&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7096eb4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"target"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"iris_scatter_matrix"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/iris_scatter_matrix.js" id="a9512677-2eb3-4fce-8188-5e9a4a22dc45"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1e1c40b" class="outline-3"&gt;
&lt;h3 id="org1e1c40b"&gt;Parallel Coordinates&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1e1c40b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hvplot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parallel_coordinates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"target"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"iris_parallel_coordinates"&lt;/span&gt;&lt;span class="p"&gt;)()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;script src="https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/iris_parallel_coordinates.js" id="d8e70c60-c084-47d6-81b0-a27c91b65ccc"&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>exploration</category><category>hvplot</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/libraries/a-first-look-at-hvplot/</guid><pubDate>Fri, 01 Feb 2019 19:24:30 GMT</pubDate></item></channel></rss>
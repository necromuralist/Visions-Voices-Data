<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visions, Voices, Data (Posts about json)</title><link>https://necromuralist.github.io/Visions-Voices-Data/</link><description></description><atom:link href="https://necromuralist.github.io/Visions-Voices-Data/categories/json.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2021 &lt;a href="mailto:necromuralist@protonmail.com"&gt;Cloistered Monkey&lt;/a&gt; </copyright><lastBuildDate>Sun, 26 Dec 2021 00:14:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Calling a JSON API</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org66ca9af"&gt;Beginning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#orgab78ca9"&gt;Imports&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org1b5acda"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org4e13257"&gt;PyPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#orgab80246"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org36bfceb"&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org696df7d"&gt;Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#orgd6db00b"&gt;Actual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org5bf260b"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org5904efd"&gt;The Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#org0a200c6"&gt;The Actual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/#orgc8ad2c4"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org66ca9af" class="outline-2"&gt;
&lt;h2 id="org66ca9af"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org66ca9af"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgab78ca9" class="outline-3"&gt;
&lt;h3 id="orgab78ca9"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgab78ca9"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1b5acda" class="outline-4"&gt;
&lt;h4 id="org1b5acda"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org1b5acda"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from pprint import pprint
import json
import urllib
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org4e13257" class="outline-4"&gt;
&lt;h4 id="org4e13257"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org4e13257"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from expects import (
    equal,
    expect,
    start_with,
)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgab80246" class="outline-3"&gt;
&lt;h3 id="orgab80246"&gt;Set Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgab80246"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org36bfceb" class="outline-4"&gt;
&lt;h4 id="org36bfceb"&gt;URL&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org36bfceb"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;API_KEY = 42
API_URL = "http://py4e-data.dr-chuck.net/json?"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org696df7d" class="outline-4"&gt;
&lt;h4 id="org696df7d"&gt;Sample&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org696df7d"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SAMPLE_LOCATION = "South Federal University"
SAMPLE_PLACE_ID = "ChIJ9e_QQm0sDogRhUPatldEFxw"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd6db00b" class="outline-4"&gt;
&lt;h4 id="orgd6db00b"&gt;Actual&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgd6db00b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ACTUAL_LOCATION = "Kazan Federal University"
ACTUAL_PLACE_ID_STARTS_WITH = "ChIJGf9"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5bf260b" class="outline-2"&gt;
&lt;h2 id="org5bf260b"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5bf260b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def get_place_id(location: str) -&amp;gt; str:
    """Get the place ID for the location

    Args:
     location: place to look up

    Returns:
     the place ID for the location
    """
    parameters = {"address": location, "key": API_KEY}
    request = API_URL + urllib.parse.urlencode(parameters)

    with urllib.request.urlopen(request) as response:
	data = json.loads(response.read().decode())
	results = data["results"][0]
	expect(data["status"]).to(equal("OK"))
	place_id = results["place_id"]
	print(f"Location: {location}")
	print(f"Place ID: {place_id}")
    return place_id
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5904efd" class="outline-3"&gt;
&lt;h3 id="org5904efd"&gt;The Sample&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org5904efd"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;place_id = get_place_id(SAMPLE_LOCATION)
expect(SAMPLE_PLACE_ID).to(equal(place_id))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Location: South Federal University
Place ID: ChIJ9e_QQm0sDogRhUPatldEFxw
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0a200c6" class="outline-3"&gt;
&lt;h3 id="org0a200c6"&gt;The Actual&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0a200c6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;place_id = get_place_id(ACTUAL_LOCATION)
expect(place_id).to(start_with(ACTUAL_PLACE_ID_STARTS_WITH))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Location: Kazan Federal University
Place ID: ChIJGf9kMxGtXkERIzwzBzFo8kY
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc8ad2c4" class="outline-2"&gt;
&lt;h2 id="orgc8ad2c4"&gt;End&lt;/h2&gt;
&lt;/div&gt;</description><category>api</category><category>json</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/calling-a-json-api/</guid><pubDate>Sun, 04 Aug 2019 18:53:29 GMT</pubDate></item><item><title>Extracting Data From JSON</title><link>https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#org44116ae"&gt;Beginning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#orga04cfd4"&gt;Imports&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#org5cbb2a7"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#org7075a98"&gt;PyPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#orge5293c6"&gt;Set Up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#orge661c71"&gt;The URLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#orgedb432e"&gt;The Expected&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#org53be0f7"&gt;Middle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#orgec4d0d6"&gt;The Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#org226f91b"&gt;The Assignment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/#org2128e6e"&gt;End&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org44116ae" class="outline-2"&gt;
&lt;h2 id="org44116ae"&gt;Beginning&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org44116ae"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orga04cfd4" class="outline-3"&gt;
&lt;h3 id="orga04cfd4"&gt;Imports&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga04cfd4"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org5cbb2a7" class="outline-4"&gt;
&lt;h4 id="org5cbb2a7"&gt;Python&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org5cbb2a7"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import json
import urllib
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7075a98" class="outline-4"&gt;
&lt;h4 id="org7075a98"&gt;PyPi&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7075a98"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from expects import expect, equal
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge5293c6" class="outline-3"&gt;
&lt;h3 id="orge5293c6"&gt;Set Up&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge5293c6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge661c71" class="outline-4"&gt;
&lt;h4 id="orge661c71"&gt;The URLs&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge661c71"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SAMPLE_URL = "http://py4e-data.dr-chuck.net/comments_42.json"
ACTUAL_URL = "http://py4e-data.dr-chuck.net/comments_260445.json"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgedb432e" class="outline-4"&gt;
&lt;h4 id="orgedb432e"&gt;The Expected&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgedb432e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SAMPLE_EXPECTED = 2553
ACTUAL_EXPECTED_LAST_TWO_DIGITS = 94
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org53be0f7" class="outline-2"&gt;
&lt;h2 id="org53be0f7"&gt;Middle&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org53be0f7"&gt;
&lt;p&gt;
We're going to pull a JSON blob and extract the "count" values and sum them. The data is structured with a single top-level key ("comments") which holds a list of dicts with "name" (name of the commenter) and "count" (the number of comments the commenter has made) values.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def count(url: str) -&amp;gt; int:
    """Totals the comment counts

    Args:
     url: source of the JSON

    Returns:
     the total of the comment counts
    """
    response = urllib.request.urlopen(url)
    data = json.loads(response.read())
    total = 0
    for index, commenter in enumerate(data["comments"]):
	total += int(commenter["count"])

    print(f"Comments: {index + 1}")
    print(f"Comments: {total: ,}")
    return total
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgec4d0d6" class="outline-3"&gt;
&lt;h3 id="orgec4d0d6"&gt;The Sample&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgec4d0d6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;total = count(SAMPLE_URL)
expect(total).to(equal(SAMPLE_EXPECTED))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Comments: 50
Comments:  2,553
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org226f91b" class="outline-3"&gt;
&lt;h3 id="org226f91b"&gt;The Assignment&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org226f91b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;total = count(ACTUAL_URL)
expect(int(str(total)[-2:])).to(equal(ACTUAL_EXPECTED_LAST_TWO_DIGITS))
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
Comments: 50
Comments:  2,594
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2128e6e" class="outline-2"&gt;
&lt;h2 id="org2128e6e"&gt;End&lt;/h2&gt;
&lt;/div&gt;</description><category>json</category><category>web-scraping</category><guid>https://necromuralist.github.io/Visions-Voices-Data/posts/web-scraping/extracting-data-from-json/</guid><pubDate>Sun, 04 Aug 2019 18:22:51 GMT</pubDate></item></channel></rss>
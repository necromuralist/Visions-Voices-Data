#+BEGIN_COMMENT
.. title: A First Machine Learning Model
.. slug: a-first-machine-learning-model
.. date: 2020-02-17 19:52:52 UTC-08:00
.. tags: kaggle,tutorial,machine learning
.. category: Tutorial
.. link: 
.. description: A first machine learning model.
.. type: text
.. status: 
.. updated: 

#+END_COMMENT
#+OPTIONS: ^:{}
#+TOC: headlines 
#+PROPERTY: header-args :session /home/athena/.local/share/jupyter/runtime/kernel-1cf9de1b-248a-42d3-b62e-cdf889a3ca6a.json
* Beginning
  This is part 2 of the [[https://www.kaggle.com/learn/intro-to-machine-learning][Introduction to Machine Learning]] kaggle tutorial
** Imports
*** Python
#+begin_src python :results none
from pathlib import Path
#+end_src
*** PyPi
#+begin_src python :results none
import pandas
#+end_src
*** Others
#+begin_src python :results none
from graeae import EnvironmentLoader
#+end_src
** Set Up
*** The Environment
#+begin_src python :results none
ENVIRONMENT = EnvironmentLoader()
#+end_src
*** The Data
#+begin_src python :results none
data = pandas.read_csv(Path(ENVIRONMENT["HOUSE-PRICES-IOWA"]).expanduser()/"train.csv")
#+end_src
* Raw
#+begin_example
# ## Step 1: Specify Prediction Target
# Select the target variable, which corresponds to the sales price. Save this to a new variable called `y`. You'll need to print a list of the columns to find the name of the column you need.
# 

# In[ ]:


# print the list of columns in the dataset to find the name of the prediction target
print(home_data.columns)


# In[ ]:


y = home_data.SalePrice

# Check your answer
step_1.check()


# In[ ]:


# The lines below will show you a hint or the solution.
# step_1.hint() 
# step_1.solution()


# ## Step 2: Create X
# Now you will create a DataFrame called `X` holding the predictive features.
# 
# Since you want only some columns from the original data, you'll first create a list with the names of the columns you want in `X`.
# 
# You'll use just the following columns in the list (you can copy and paste the whole list to save some typing, though you'll still need to add quotes):
#     * LotArea
#     * YearBuilt
#     * 1stFlrSF
#     * 2ndFlrSF
#     * FullBath
#     * BedroomAbvGr
#     * TotRmsAbvGrd
# 
# After you've created that list of features, use it to create the DataFrame that you'll use to fit the model.

# In[ ]:


# Create the list of features below
feature_names = [
    "LotArea",
    "YearBuilt",
    "1stFlrSF",
    "2ndFlrSF",
    "FullBath",
    "BedroomAbvGr",
    "TotRmsAbvGrd",
]

# Select data corresponding to features in feature_names
X = home_data[feature_names]

# Check your answer
step_2.check()


# In[ ]:


# step_2.hint()
# step_2.solution()


# ## Review Data
# Before building a model, take a quick look at **X** to verify it looks sensible

# In[ ]:


# Review data
# print description or statistics from X
print(X.describe())

# print the top few lines
print(X.head())


# ## Step 3: Specify and Fit Model
# Create a `DecisionTreeRegressor` and save it iowa_model. Ensure you've done the relevant import from sklearn to run this command.
# 
# Then fit the model you just created using the data in `X` and `y` that you saved above.

# In[ ]:


# from _ import _
from sklearn.tree import DecisionTreeRegressor
#specify the model. 
#For model reproducibility, set a numeric value for random_state when specifying the model
iowa_model = DecisionTreeRegressor(random_state=3)

# Fit the model
iowa_model.fit(X, y)

# Check your answer
step_3.check()


# In[ ]:


# step_3.hint()
# step_3.solution()


# ## Step 4: Make Predictions
# Make predictions with the model's `predict` command using `X` as the data. Save the results to a variable called `predictions`.

# In[ ]:


predictions = iowa_model.predict(X)
print(predictions)

# Check your answer
step_4.check()


# In[ ]:


# step_4.hint()
# step_4.solution()


# ## Think About Your Results
# 
# Use the `head` method to compare the top few predictions to the actual home values (in `y`) for those same homes. Anything surprising?
# 

# In[ ]:


# You can write code in this cell
y.head()


# It's natural to ask how accurate the model's predictions will be and how you can improve that. That will be you're next step.
# 
# # Keep Going
# 
# You are ready for **[Model Validation](https://www.kaggle.com/dansbecker/model-validation).**
# 

# ---
# **[Introduction to Machine Learning Home Page](https://www.kaggle.com/learn/intro-to-machine-learning)**
# 
# 
# 
# 
# 
# *Have questions or comments? Visit the [Learn Discussion forum](https://www.kaggle.com/learn-forum) to chat with other Learners.*
#+end_example

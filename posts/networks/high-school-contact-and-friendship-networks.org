#+BEGIN_COMMENT
.. title: High School Contact and Friendship Networks
.. slug: high-school-contact-and-friendship-networks
.. date: 2019-03-24 17:38:17 UTC-07:00
.. tags: networks,exploration
.. category: Networks
.. link: 
.. description: A look at the High School Contact and Friendship Networks.
.. type: text
.. status: draft
.. updated: 

#+END_COMMENT
#+OPTIONS: H:5
#+TOC: headlines 2
#+BEGIN_SRC ipython :session highschool :results none :exports none
%load_ext autoreload
%autoreload 2
#+END_SRC
* Beginning
  This looks at data provided by [[http://www.sociopatterns.org][SocioPatterns]] that looks a the interactions between students at a High School in Marseilles, France, in December of 2013.
*** Imports
**** From Python
#+begin_src ipython :session highschool :results none
from collections import Counter
from functools import partial
from pathlib import Path
import os
#+end_src
**** From PyPi
#+begin_src ipython :session highschool :results none
from bokeh.models import HoverTool
from dotenv import load_dotenv
from holoviews import opts
from holoviews.operation.datashader import datashade, bundle_graph
import holoviews
import hvplot.pandas
import networkx
import pandas as pandas
#+end_src
**** My Stuff
#+begin_src ipython :session highschool :results none
from graeae.timers import Timer
from graeae.visualization import EmbedBokeh, EmbedHoloview
#+end_src
*** Load the Dotenv
#+begin_src ipython :session highschool :results none
load_dotenv(".env")
#+end_src
*** Build the Timer
#+begin_src ipython :session highschool :results none
TIMER = Timer()
#+end_src
** Setup The Bokeh
#+begin_src ipython :session highschool :results none
holoviews.extension("bokeh")
SLUG = "high-school-contact-and-friendship-networks/"
output = Path("../../files/posts/networks/" + SLUG)
Embed = partial(EmbedHoloview, folder_path=output)
EmbedB = partial(EmbedBokeh, folder_path=output)
#+end_src
** Load The Data
   Let's take a look at the data before loading it into pandas.

#+begin_src ipython :session highschool :results none
HIGH_SCHOOL = Path(os.environ.get("HIGH_SCHOOL")).expanduser()
assert HIGH_SCHOOL.is_dir()

#+begin_src ipython :session highschool :results none
class Files:
    metadata = "metadata_2013.txt"
    contact_diaries = "Contact-diaries-network_data_2013.csv"
    facebook = "Facebook-known-pairs_data_2013.csv"
    friendship = "Friendship-network_data_2013.csv"
    high_school = "High-School_data_2013.csv"
#+end_src

*** MetaData
#+begin_src ipython :session highschool :results output :exports both
metadata_path = HIGH_SCHOOL.joinpath(Files.metadata)
assert metadata_path.is_file()
with metadata_path.open() as reader:
    for line in range(5):
        print(reader.readline(), end="")
#+end_src

#+RESULTS:
: 650	2BIO1	F
: 498	2BIO1	F
: 627	2BIO1	F
: 857	2BIO1	F
: 487	2BIO1	F

This first file has the meta-data for the students. The three columns are the student's ID, class, and gender.

#+begin_src ipython :session highschool :results none
meta_data = pandas.read_csv(metadata_path, sep="\t", 
                            names=["id", "class", "gender"])
meta_data.loc[:, "class"] = meta_data["class"].astype("category")
meta_data.loc[:, "gender"] = meta_data.gender.astype("category")
#+end_src

**** Classes

#+begin_src ipython :session highschool :results none
grouped = meta_data.groupby(["class", "gender"]).agg(
    {"class": "count", "gender": "count"})
grouped.columns = ["class_count", "gender_count"]
grouped = grouped.reset_index()
#+end_src
#+begin_src ipython :session highschool :results output raw :exports both
plot = grouped.hvplot.bar(title="Class Counts by Gender", 
                          x="class", y="class_count", 
                          stacked=True,
                          by="gender", height=400).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts_stacked", height_in_pixels=400)()
#+end_src

#+RESULTS:
#+begin_export html
<object type="text/html" data="gender_counts_stacked.html" style="width:100%" height=400>
  <p>Figure Missing</p>
</object>
#+end_export

#+begin_src ipython :session highschool :results output raw :exports both
plot = grouped.hvplot.bar(title="Class Counts by Gender", x="class", y="class_count", 
                          by="gender", height=400).opts(xrotation=90)
Embed(plot=plot, file_name="gender_counts", height_in_pixels=400)()
#+end_src

#+RESULTS:
#+begin_export html
<object type="text/html" data="gender_counts.html" style="width:100%" height=400>
  <p>Figure Missing</p>
</object>
#+end_export

Strangely, the classes that start with =2BIO= are more female while the others are more male.
**** Gender
#+begin_src ipython :session highschool :results output raw :exports both
plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
                          stacked=True,
                          by="class", height=400).opts(
                              xrotation=90, 
                              xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts_stacked", height_in_pixels=400)()
#+end_src

#+RESULTS:
#+begin_export html
<object type="text/html" data="class_counts_stacked.html" style="width:100%" height=400>
  <p>Figure Missing</p>
</object>
#+end_export

#+begin_src ipython :session highschool :results output raw :exports both
plot = grouped.hvplot.bar(title="Gender Counts", x="gender", y="gender_count",
                          by="class", height=400).opts(
                              xrotation=90, xlabel="Gender and Class")
Embed(plot=plot, file_name="class_counts", height_in_pixels=400)()
#+end_src

#+RESULTS:
#+begin_export html
<object type="text/html" data="class_counts.html" style="width:100%" height=400>
  <p>Figure Missing</p>
</object>
#+end_export

It looks like there were a little more males than females, but not a whole lot more.
*** The Friendship Network
    This is a dataset that shows whether a student identified another student as their friend.

#+begin_src ipython :session highschool :results output :exports both
friendship_path = HIGH_SCHOOL.joinpath(Files.friendship)
assert friendship_path.is_file()
with friendship_path.open() as reader:
    for line in range(5):
        print(reader.readline(), end="")
#+end_src

#+RESULTS:
: 1 55
: 1 205
: 1 272
: 1 494
: 1 779

The columns are the person who was making the report and the person that was identified as a friend.

#+begin_src ipython :session highschool :results none
friendship_data = pandas.read_csv(friendship_path, delimiter=" ", 
                                  names=["start", "end"])
friendship_data = friendship_data.dropna()
#+end_src
* Middle
** Looking at the Friendship Network

#+begin_src ipython :session highschool :results output :exports both
with TIMER:
    friendship_graph = networkx.convert_matrix.from_pandas_edgelist(
        friendship_data, "reporter", "friend", 
        create_using=networkx.DiGraph)
#+end_src

#+RESULTS:
: Started: 2019-03-24 19:28:50.615676
: Ended: 2019-03-24 19:28:50.616614
: Elapsed: 0:00:00.000938
#+begin_src ipython :session highschool :results none
genders = dict(zip(meta_data.id, meta_data.gender))
gender_labels = holoviews.Dataset([genders[index] for index in friendship_data.start.unique()],
                                  vdims="Gender")
#+end_src

#+begin_src ipython :session highschool :results output raw :exports both
hover = HoverTool(
    tooltips = [
        ("Start", "@start"),
         ("End", "@end"),
         ("Gender", "@gender"),
    ],
)
# friendship_data["gender"] = friendship_data.start.map(genders)
plot = holoviews.Graph(friendship_data, kdims=["start", "end"], vdims=["gender"]).opts(
    node_color="gender",
    cmap="Set1",
    tools=[hover],
    width=800,
    height=800,
    title="Friendship Network",
    xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network_circular", height_in_pixels=810)()
#+end_src

#+RESULTS:
#+begin_export html
<object type="text/html" data="friendship_network_circular.html" style="width:100%" height=810>
  <p>Figure Missing</p>
</object>
#+end_export

It's a little hard to see what's going on here, other than to note that you can see some people are more popular than others.


#+begin_src ipython :session highschool :results output raw :exports both
plot = holoviews.Graph.from_networkx(friendship_graph, networkx.spring_layout).opts(
                                         tools=["hover"],
                                         width=800,
                                         height=800,
                                         title="Friendship Network",
                                         xaxis=None, yaxis=None, directed=True)
Embed(plot=plot, file_name="friendship_network", height_in_pixels=810)()
#+end_src

#+RESULTS:
#+begin_export html
<object type="text/html" data="friendship_network.html" style="width:100%" height=810>
  <p>Figure Missing</p>
</object>
#+end_export


* End
** Citations
   - R. Mastrandrea, J. Fournet, A. Barrat,
Contact patterns in a high school: a comparison between data collected using wearable sensors, contact diaries and friendship surveys.
PLoS ONE 10(9): e0136497 (2015)
